package frontend.usuario;

import backend.auxiliares.Mensajes;
import backend.gestores.GestorConfiguracion;
import backend.usuarios.Usuario;
import frontend.auxiliares.FiltroTexto;
import frontend.auxiliares.GestorBarrasDeEstado;
import frontend.auxiliares.GestorImagenes;
import frontend.auxiliares.LookAndFeelEntropy;
import frontend.auxiliares.botones.CircularGlossyButton;
import frontend.auxiliares.botones.ColorStyles;
import frontend.auxiliares.botones.Theme;
import frontend.inicio.IVentanaPrincipal;
import java.awt.Dimension;
//import frontend.inicio.VentanaPrincipal;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author denise
 */
public final class PanelDatosUsuario extends javax.swing.JPanel {

    public static final Pattern EMAIL_REGEX = Pattern.compile("^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,6}$", Pattern.CASE_INSENSITIVE);
    private final GestorBarrasDeEstado gestorEstados;
    private Usuario usuario;
    private final IVentanaPrincipal frmPrincipal;

    /**
     * Creates new form PanelDatosUsuario
     *
     * @param frmPrincipal única instancia de la ventana principal de la
     * aplicación.
     *
     */
    public PanelDatosUsuario(IVentanaPrincipal frmPrincipal) {
        initComponents();
        this.gestorEstados = new GestorBarrasDeEstado(lblActualizacionEstado, lblIconoEstado);
        this.usuario = GestorConfiguracion.getInstancia().getIDAOUsuarios().getUsuario();
        if (this.usuario == null) {
            this.usuario = new Usuario();
        }
        this.cargarDatosUsuario();
        this.frmPrincipal = frmPrincipal;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlCentral = new javax.swing.JPanel();
        pnlIzquierdo = new javax.swing.JPanel();
        pnlDatos = new javax.swing.JPanel();
        lblTipoDocumento = new javax.swing.JLabel();
        scrDescripcion = new javax.swing.JScrollPane();
        txaDescripcion = new frontend.auxiliares.TextAreaEntropy();
        txtNroDocumento = new frontend.auxiliares.TextFieldEntropy();
        txtApellido = new frontend.auxiliares.TextFieldEntropy();
        lblNroDocumento = new javax.swing.JLabel();
        txtLegajo = new frontend.auxiliares.TextFieldEntropy();
        lblEmail = new javax.swing.JLabel();
        lblLegajo = new javax.swing.JLabel();
        lblDescripcion = new javax.swing.JLabel();
        txtEmail = new frontend.auxiliares.TextFieldEntropy();
        txtNombre = new frontend.auxiliares.TextFieldEntropy();
        cmbTipoDocumento = new frontend.auxiliares.ComboBoxEntropy();
        lblNombre = new javax.swing.JLabel();
        lblApellido = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnGuardarExamen = new javax.swing.JButton();
        btnVolverInicio = new javax.swing.JButton();
        pnlImagen = new javax.swing.JPanel();
        btnBorrarImagen = new javax.swing.JButton();
        btnActualizarIamgen = new javax.swing.JButton();
        pnlImagenLogo = new frontend.auxiliares.PanelConFondo();
        lblLogo = new javax.swing.JLabel();
        pnlEstado = new javax.swing.JPanel();
        lblActualizacionEstado = new javax.swing.JLabel();
        lblIconoEstado = new javax.swing.JLabel();

        pnlCentral.setLayout(new javax.swing.BoxLayout(pnlCentral, javax.swing.BoxLayout.LINE_AXIS));

        pnlIzquierdo.setLayout(new javax.swing.BoxLayout(pnlIzquierdo, javax.swing.BoxLayout.Y_AXIS));

        lblTipoDocumento.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblTipoDocumento.setText("Tipo de documento:");

        txaDescripcion.setTextoPorDefecto("Ingrese una descripcion de su perfil...");
        txaDescripcion.mostrarTextoPorDefecto();
        txaDescripcion.setColumns(20);
        txaDescripcion.setRows(1);
        scrDescripcion.setViewportView(txaDescripcion);

        txtNroDocumento.setDocument(new FiltroTexto(FiltroTexto.TipoFiltro.DIGITOS_Y_PUNTO));
        txtNroDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNroDocumentoFocusLost(evt);
            }
        });
        txtNroDocumento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNroDocumentoActionPerformed(evt);
            }
        });
        txtNroDocumento.setTextoPorDefecto("Ingrese un número de documento...");
        txtNroDocumento.mostrarTextoPorDefecto();

        txtApellido.setTextoPorDefecto("Ingrese un apellido...");
        txtApellido.mostrarTextoPorDefecto();
        txtApellido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtApellidoFocusLost(evt);
            }
        });

        lblNroDocumento.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblNroDocumento.setText("N° documento:");

        txtLegajo.setTextoPorDefecto("Ingrese un legajo...");
        txtLegajo.mostrarTextoPorDefecto();

        lblEmail.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblEmail.setText("E-mail:");

        lblLegajo.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblLegajo.setText("Legajo:");

        lblDescripcion.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblDescripcion.setText("Descripción:");

        txtEmail.setTextoPorDefecto("Ingrese un e-mail...");
        txtEmail.mostrarTextoPorDefecto();
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });

        txtNombre.setTextoPorDefecto("Ingrese un nombre...");
        txtNombre.mostrarTextoPorDefecto();
        txtNombre.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreFocusLost(evt);
            }
        });

        cmbTipoDocumento.setEditable(false);
        cmbTipoDocumento.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "DNI", "LC", "LD", "CI" }));
        cmbTipoDocumento.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbTipoDocumentoFocusLost(evt);
            }
        });

        lblNombre.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblNombre.setText("Nombre:");

        lblApellido.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblApellido.setText("Apellido:");

        javax.swing.GroupLayout pnlDatosLayout = new javax.swing.GroupLayout(pnlDatos);
        pnlDatos.setLayout(pnlDatosLayout);
        pnlDatosLayout.setHorizontalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 434, Short.MAX_VALUE)
            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDatosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(lblApellido, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(txtNombre, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)
                                .addComponent(txtApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 368, Short.MAX_VALUE)))
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addComponent(lblTipoDocumento)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addComponent(lblNroDocumento)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtNroDocumento, javax.swing.GroupLayout.DEFAULT_SIZE, 334, Short.MAX_VALUE))
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addComponent(lblLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtLegajo, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addComponent(lblDescripcion)
                            .addGap(0, 353, Short.MAX_VALUE))
                        .addGroup(pnlDatosLayout.createSequentialGroup()
                            .addComponent(lblEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 363, Short.MAX_VALUE))
                        .addComponent(scrDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 422, Short.MAX_VALUE))
                    .addContainerGap()))
        );
        pnlDatosLayout.setVerticalGroup(
            pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 308, Short.MAX_VALUE)
            .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pnlDatosLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNombre)
                        .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblApellido)
                        .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblTipoDocumento)
                        .addComponent(cmbTipoDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblNroDocumento)
                        .addComponent(txtNroDocumento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblLegajo)
                        .addComponent(txtLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(pnlDatosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblEmail)
                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(lblDescripcion)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(scrDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 65, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        pnlIzquierdo.add(pnlDatos);

        pnlBotones.setMaximumSize(new java.awt.Dimension(32767, 45));
        pnlBotones.setLayout(new java.awt.GridLayout(1, 1));

        btnGuardarExamen.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnGuardarExamen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_guardar.png"))); // NOI18N
        btnGuardarExamen.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardarExamen.setContentAreaFilled(false);
        btnGuardarExamen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarExamen.setIconTextGap(10);
        btnGuardarExamen.setMaximumSize(new java.awt.Dimension(45, 45));
        btnGuardarExamen.setMinimumSize(new java.awt.Dimension(45, 45));
        btnGuardarExamen.setPreferredSize(new java.awt.Dimension(45, 45));
        btnGuardarExamen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarExamenMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarExamenMouseExited(evt);
            }
        });
        btnGuardarExamen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarExamenActionPerformed(evt);
            }
        });
        pnlBotones.add(btnGuardarExamen);

        btnVolverInicio.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnVolverInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_inicio.png"))); // NOI18N
        btnVolverInicio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolverInicio.setContentAreaFilled(false);
        btnVolverInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolverInicio.setIconTextGap(10);
        btnVolverInicio.setMaximumSize(new java.awt.Dimension(45, 45));
        btnVolverInicio.setMinimumSize(new java.awt.Dimension(45, 45));
        btnVolverInicio.setPreferredSize(new java.awt.Dimension(45, 45));
        btnVolverInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverInicioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverInicioMouseExited(evt);
            }
        });
        btnVolverInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverInicioActionPerformed(evt);
            }
        });
        pnlBotones.add(btnVolverInicio);

        pnlIzquierdo.add(pnlBotones);

        pnlCentral.add(pnlIzquierdo);

        pnlImagen.setBackground(new java.awt.Color(250, 225, 175));
        pnlImagen.setBorder(LookAndFeelEntropy.BORDE_NARANJA);
        pnlImagen.setMaximumSize(new java.awt.Dimension(204, 32767));

        btnBorrarImagen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_papelera25x25.png"))); // NOI18N
        btnBorrarImagen.setToolTipText("Borrar Imagen");
        btnBorrarImagen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBorrarImagen.setContentAreaFilled(false);
        btnBorrarImagen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarImagen.setOpaque(true);
        btnBorrarImagen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarImagenActionPerformed(evt);
            }
        });

        btnActualizarIamgen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_actualizar25x25.png"))); // NOI18N
        btnActualizarIamgen.setToolTipText("Borrar Imagen");
        btnActualizarIamgen.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnActualizarIamgen.setContentAreaFilled(false);
        btnActualizarIamgen.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizarIamgen.setOpaque(true);
        btnActualizarIamgen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarIamgenActionPerformed(evt);
            }
        });

        pnlImagenLogo.setPreferredSize(new java.awt.Dimension(155, 155));

        lblLogo.setBackground(new java.awt.Color(248, 246, 246));
        lblLogo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblLogo.setForeground(new java.awt.Color(102, 102, 102));
        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_camara.png"))); // NOI18N
        lblLogo.setText("Sin imagen");
        lblLogo.setToolTipText("Imagen");
        lblLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLogo.setOpaque(true);
        lblLogo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pnlImagenLogoLayout = new javax.swing.GroupLayout(pnlImagenLogo);
        pnlImagenLogo.setLayout(pnlImagenLogoLayout);
        pnlImagenLogoLayout.setHorizontalGroup(
            pnlImagenLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlImagenLogoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlImagenLogoLayout.setVerticalGroup(
            pnlImagenLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlImagenLayout = new javax.swing.GroupLayout(pnlImagen);
        pnlImagen.setLayout(pnlImagenLayout);
        pnlImagenLayout.setHorizontalGroup(
            pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrarImagen)
                    .addComponent(btnActualizarIamgen, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlImagenLayout.setVerticalGroup(
            pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlImagenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlImagenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlImagenLayout.createSequentialGroup()
                        .addComponent(btnActualizarIamgen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarImagen)))
                .addContainerGap(192, Short.MAX_VALUE))
        );

        pnlCentral.add(pnlImagen);

        pnlEstado.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));

        lblActualizacionEstado.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblActualizacionEstado.setForeground(new java.awt.Color(102, 102, 102));
        lblActualizacionEstado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblActualizacionEstado.setText("Acá se escriben estados...");
        lblActualizacionEstado.setAlignmentX(0.5F);
        lblActualizacionEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIconoEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconoEstado.setText(" ");
        lblIconoEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout pnlEstadoLayout = new javax.swing.GroupLayout(pnlEstado);
        pnlEstado.setLayout(pnlEstadoLayout);
        pnlEstadoLayout.setHorizontalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadoLayout.createSequentialGroup()
                .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlEstadoLayout.setVerticalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstadoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNroDocumentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNroDocumentoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNroDocumentoActionPerformed

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        if (!txtEmail.getText().isEmpty() && !validarEmail(txtEmail.getText())) {
            Mensajes.mostrarError("La dirección de correo ingresada no es válida.");
            txtEmail.selectAll();
            txtEmail.grabFocus();
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void btnGuardarExamenMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarExamenMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnGuardarExamenMouseExited

    private void btnGuardarExamenMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarExamenMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Actualizar los datos del usuario.");
    }//GEN-LAST:event_btnGuardarExamenMouseEntered

    private void btnGuardarExamenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarExamenActionPerformed
        this.guardarUsuario();
    }//GEN-LAST:event_btnGuardarExamenActionPerformed

    private void btnVolverInicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInicioMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Volver a la pantalla de inicio.");
    }//GEN-LAST:event_btnVolverInicioMouseEntered

    private void btnVolverInicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInicioMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnVolverInicioMouseExited

    private void btnVolverInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverInicioActionPerformed
        frmPrincipal.volverAInicio();
    }//GEN-LAST:event_btnVolverInicioActionPerformed

    private void btnActualizarIamgenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarIamgenActionPerformed
        JFileChooser flcChooser = new JFileChooser();
        flcChooser.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        flcChooser.setDialogTitle("Cargar imagen");
        flcChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        flcChooser.setMultiSelectionEnabled(false);
        flcChooser.setAcceptAllFileFilterUsed(false);
        int intEstado = flcChooser.showOpenDialog(this);
        if (intEstado == JFileChooser.APPROVE_OPTION) {
            File archivoElegido = flcChooser.getSelectedFile();
            String strRutaAbsoluta = archivoElegido.getPath();
            if (archivoElegido.exists()) {
                BufferedImage imgSeleccionada = GestorImagenes.redimensionarImagen(strRutaAbsoluta, 155, 155);
                this.pnlImagenLogo.setImagen(imgSeleccionada);
                this.lblLogo.setVisible(false);
                this.usuario.setImgFoto(guardarParametrosDeImagen(strRutaAbsoluta));
            }
        }
    }//GEN-LAST:event_btnActualizarIamgenActionPerformed

    private void btnBorrarImagenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarImagenActionPerformed
        this.lblLogo.setVisible(true);
        this.usuario.setImgFoto(null);
    }//GEN-LAST:event_btnBorrarImagenActionPerformed

    private void txtNombreFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreFocusLost
        if (txtNombre.getText().isEmpty()) {
            gestorEstados.setNuevoEstadoImportante("Debe completar su nombre.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }
    }//GEN-LAST:event_txtNombreFocusLost

    private void txtApellidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtApellidoFocusLost
        if (txtApellido.getText().isEmpty()) {
            gestorEstados.setNuevoEstadoImportante("Debe completar su apellido.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }
    }//GEN-LAST:event_txtApellidoFocusLost

    private void cmbTipoDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbTipoDocumentoFocusLost
        if (cmbTipoDocumento.getSelectedIndex() == -1) {
            gestorEstados.setNuevoEstadoImportante("Debe completar su tipo de documento.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }
    }//GEN-LAST:event_cmbTipoDocumentoFocusLost

    private void txtNroDocumentoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNroDocumentoFocusLost
        if (txtNroDocumento.getText().isEmpty()) {
            gestorEstados.setNuevoEstadoImportante("Debe completar su número de documento.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }
    }//GEN-LAST:event_txtNroDocumentoFocusLost

    private byte[] guardarParametrosDeImagen(String ruta) {
        File fila = new File(ruta);
        byte[] bytes = null;
        FileInputStream entrada;
        try {
            entrada = new FileInputStream(fila);
            bytes = new byte[(int) fila.length()];
            entrada.read(bytes);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PanelDatosUsuario.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PanelDatosUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
        return bytes;
    }

    public void cargarDatosUsuario() {
        this.txtApellido.setText(this.usuario.getStrApellido());
        this.txtNombre.setText(this.usuario.getStrNombre());
        this.txtEmail.setText(this.usuario.getStrEmail());
        this.txtLegajo.setText(this.usuario.getStrLegajo());
        if (this.usuario.getIntNroDocumento() != -1) {
            this.txtNroDocumento.setText(this.usuario.getIntNroDocumento() + "");
        }
        this.txaDescripcion.setText(this.usuario.getStrDescripcion());
        if (this.usuario.getStrTipoDocumento() != null && !this.usuario.getStrTipoDocumento().isEmpty()) {
            this.cmbTipoDocumento.setSelectedItem(this.usuario.getStrTipoDocumento());
        }
        if (this.usuario != null && (byte[]) this.usuario.getImgFoto() != null) {
            this.pnlImagenLogo.setImagen(Toolkit.getDefaultToolkit().createImage((byte[]) this.usuario.getImgFoto()));
            this.lblLogo.setVisible(false);
        }
    }

    public void limpiarDatos() {
        this.txtApellido.setText("");
        this.txtNombre.setText("");
        this.txtEmail.setText("");
        this.txtLegajo.setText("");
        this.txtNroDocumento.setText("");
        this.txaDescripcion.setText("");
        this.cmbTipoDocumento.setSelectedIndex(-1);
        this.lblLogo.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizarIamgen;
    private javax.swing.JButton btnBorrarImagen;
    private javax.swing.JButton btnGuardarExamen;
    private javax.swing.JButton btnVolverInicio;
    private frontend.auxiliares.ComboBoxEntropy cmbTipoDocumento;
    private javax.swing.JLabel lblActualizacionEstado;
    private javax.swing.JLabel lblApellido;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblIconoEstado;
    private javax.swing.JLabel lblLegajo;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblNroDocumento;
    private javax.swing.JLabel lblTipoDocumento;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlCentral;
    private javax.swing.JPanel pnlDatos;
    private javax.swing.JPanel pnlEstado;
    private javax.swing.JPanel pnlImagen;
    private frontend.auxiliares.PanelConFondo pnlImagenLogo;
    private javax.swing.JPanel pnlIzquierdo;
    private javax.swing.JScrollPane scrDescripcion;
    private frontend.auxiliares.TextAreaEntropy txaDescripcion;
    private frontend.auxiliares.TextFieldEntropy txtApellido;
    private frontend.auxiliares.TextFieldEntropy txtEmail;
    private frontend.auxiliares.TextFieldEntropy txtLegajo;
    private frontend.auxiliares.TextFieldEntropy txtNombre;
    private frontend.auxiliares.TextFieldEntropy txtNroDocumento;
    // End of variables declaration//GEN-END:variables

    private boolean validarEmail(String emailStr) {
        Matcher matcher = EMAIL_REGEX.matcher(emailStr);
        return matcher.find();
    }

    private void guardarUsuario() {
        if (validarDatosUsuario()) {
            usuario.setStrNombre(txtNombre.getText());
            usuario.setStrApellido(txtApellido.getText());
            usuario.setStrTipoDocumento(cmbTipoDocumento.getSelectedItem().toString());
            usuario.setIntNroDocumento(Integer.parseInt(txtNroDocumento.getText()));
            usuario.setStrEmail(txtEmail.getText());
            usuario.setStrLegajo(txtLegajo.getText());
            usuario.setStrDescripcion(txaDescripcion.getText());
            // La foto se guarda  al cargarla o eliminarla.
            if (GestorConfiguracion.getInstancia().getIDAOUsuarios().guardarUsuario(usuario)) {
                gestorEstados.setNuevoEstadoImportante("Los datos han sido actualizados...", GestorBarrasDeEstado.TipoEstado.OK);
            } else {
                gestorEstados.setNuevoEstadoImportante("Error al actualizar los datos... Intente nuevamente.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
            }
        } else {
            Mensajes.mostrarAdvertencia("Nombre, apellido, tipo y nro. de documento son datos obligatorios...");
        }
    }

    private boolean validarDatosUsuario() {
        return !(txtNombre.getText().isEmpty()
                || txtApellido.getText().isEmpty()
                || cmbTipoDocumento.getSelectedIndex() == -1
                || txtNroDocumento.getText().isEmpty()
                || (!txtEmail.getText().isEmpty() && !validarEmail(txtEmail.getText())));
    }
}
