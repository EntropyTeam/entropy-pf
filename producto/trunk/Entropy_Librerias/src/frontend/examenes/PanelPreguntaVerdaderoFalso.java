package frontend.examenes;

import frontend.auxiliares.IIdentificadorCambios;
import backend.resoluciones.RespuestaPreguntaVerdaderoFalso;
import frontend.auxiliares.LookAndFeelEntropy;
import java.awt.Color;
import javax.swing.JRadioButton;

/**
 * Clase que representa el panel para responder las preguntas verdadero/falso.
 *
 * @author Denise
 */
public class PanelPreguntaVerdaderoFalso extends javax.swing.JPanel implements IIdentificadorCambios {

    private RespuestaPreguntaVerdaderoFalso respuesta;
    private final boolean blnEsCorreccion;

    /**
     * Constructor por defecto de la clase.
     *
     * @param respuesta respuesta verdadero/falso a ser respondida por el
     * alumno.
     * @param blnEsCorreccion true si se está corrigiendo la respuesta (deben
     * estar los campos deshabilitados y cargarse la respuesta), false si el
     * alumno debe responder la respuesta
     */
    public PanelPreguntaVerdaderoFalso(RespuestaPreguntaVerdaderoFalso respuesta, final boolean blnEsCorreccion) {
        initComponents();
        this.blnEsCorreccion = blnEsCorreccion;
        this.respuesta = respuesta;
        if (respuesta.getPregunta().isBlnConJustificacion()) {
            this.add(scrJustificacion);
        }
        cargarRespuesta();
        if (blnEsCorreccion) {
            colorearCorreccion();
            rbnFalso.setFocusable(false);
            rbnVerdadero.setFocusable(false);
            txaJustificacion.setEditable(false);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgrRespuestaCorrecta = new javax.swing.ButtonGroup();
        scrJustificacion = new javax.swing.JScrollPane();
        txaJustificacion = new frontend.auxiliares.TextAreaEntropy();
        pnlOpciones = new javax.swing.JPanel();
        rbnFalso = new javax.swing.JRadioButton();
        rbnVerdadero = new javax.swing.JRadioButton();

        scrJustificacion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Justificación", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, LookAndFeelEntropy.FUENTE_REGULAR));
        scrJustificacion.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        txaJustificacion.setColumns(20);
        txaJustificacion.setRows(5);
        txaJustificacion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txaJustificacionKeyReleased(evt);
            }
        });
        scrJustificacion.setViewportView(txaJustificacion);

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        pnlOpciones.setMaximumSize(new java.awt.Dimension(32767, 80));
        pnlOpciones.setPreferredSize(new java.awt.Dimension(91, 80));

        bgrRespuestaCorrecta.add(rbnFalso);
        rbnFalso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        rbnFalso.setText("Falso");
        rbnFalso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnFalsoActionPerformed(evt);
            }
        });

        bgrRespuestaCorrecta.add(rbnVerdadero);
        rbnVerdadero.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        rbnVerdadero.setText("Verdadero");
        rbnVerdadero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnVerdaderoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlOpcionesLayout = new javax.swing.GroupLayout(pnlOpciones);
        pnlOpciones.setLayout(pnlOpcionesLayout);
        pnlOpcionesLayout.setHorizontalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnVerdadero)
                    .addComponent(rbnFalso, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlOpcionesLayout.setVerticalGroup(
            pnlOpcionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlOpcionesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnVerdadero)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbnFalso)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(pnlOpciones);
    }// </editor-fold>//GEN-END:initComponents

    private void rbnVerdaderoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnVerdaderoActionPerformed
        if (blnEsCorreccion) {
            cargarRespuesta();
        } else {
            fabricarRespuesta();
        }
    }//GEN-LAST:event_rbnVerdaderoActionPerformed

    private void rbnFalsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnFalsoActionPerformed
        if (blnEsCorreccion) {
            cargarRespuesta();
        } else {
            fabricarRespuesta();
        }
    }//GEN-LAST:event_rbnFalsoActionPerformed

    private void txaJustificacionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txaJustificacionKeyReleased
        if (!blnEsCorreccion) {
            fabricarRespuesta();
        }
    }//GEN-LAST:event_txaJustificacionKeyReleased


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup bgrRespuestaCorrecta;
    private javax.swing.JPanel pnlOpciones;
    private javax.swing.JRadioButton rbnFalso;
    private javax.swing.JRadioButton rbnVerdadero;
    private javax.swing.JScrollPane scrJustificacion;
    private frontend.auxiliares.TextAreaEntropy txaJustificacion;
    // End of variables declaration//GEN-END:variables

    /**
     * Actualiza el objeto pregunta de la instancia con la respuesta del alumno.
     *
     * @return la respuesta actualizada.
     */
    public RespuestaPreguntaVerdaderoFalso fabricarRespuesta() {
        boolean blnSeleccionoVerdadero = rbnVerdadero.isSelected();
        boolean blnSeleccionoFalso = rbnFalso.isSelected();
        respuesta.setBlnSeleccionoFalso(blnSeleccionoFalso);
        respuesta.setBlnSeleccionoVerdadero(blnSeleccionoVerdadero);
        if (respuesta.getPregunta().isBlnConJustificacion()) {
            String strJustificacion = txaJustificacion.getText();
            respuesta.setStrJustificacion(strJustificacion);
        }
        return respuesta;
    }

    public RespuestaPreguntaVerdaderoFalso getPregunta() {
        return respuesta;
    }

    public void setPregunta(RespuestaPreguntaVerdaderoFalso respuesta) {
        this.respuesta = respuesta;
    }

    /**
     * Analiza si la pregunta mostrada en este panel ha sido respondida.
     *
     * @return true si se ha modificado, false de lo contrario.
     */
    @Override
    public boolean seModifico() {
        return rbnFalso.isSelected()
                || rbnVerdadero.isSelected()
                || !txaJustificacion.getText().isEmpty();
    }

    /**
     * Carga una respuesta en el panel.
     */
    private void cargarRespuesta() {
        txaJustificacion.setText(respuesta.getStrJustificacion());
        bgrRespuestaCorrecta.clearSelection();
        if (respuesta.isBlnSeleccionoVerdadero()) {
            bgrRespuestaCorrecta.setSelected(rbnVerdadero.getModel(), true);
            //rbnVerdadero.doClick();
        } else if (respuesta.isBlnSeleccionoFalso()) {
            //rbnFalso.doClick();
            bgrRespuestaCorrecta.setSelected(rbnFalso.getModel(), true);
        }

    }

    /**
     * Marca con rojo las preguntas contestadas erróneamente.
     */
    private void colorearCorreccion() {
        if (rbnVerdadero.isSelected() != respuesta.getPregunta().isBlnEsVerdadera()) {
            rbnVerdadero.setForeground(Color.red);
        } else if (rbnFalso.isSelected() != !respuesta.getPregunta().isBlnEsVerdadera()) {
            rbnFalso.setForeground(Color.red);
        }
    }

}
