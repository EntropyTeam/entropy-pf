package frontend.presentaciones;

import frontend.tomaexamenes.*;
import backend.auxiliares.Mensajes;
import backend.red.GestorRedAdHoc;
import backend.red.Mensaje;
import backend.red.RedAdHocCreator;
import frontend.auxiliares.LookAndFeelEntropy;
import java.awt.Component;
import java.awt.Container;

/**
 * Clase que representa el panel para el ingreso de datos de red en la toma de
 * exámenes.
 *
 * @author Denise
 */
public class PanelPresentacionDatosRed extends javax.swing.JPanel implements RedAdHocCreator {

    private final PanelPresentacion padre;
    private GestorRedAdHoc gestRed;

    /**
     * Constructor de la clase.
     *
     * @param padre instancia de <code>PanelTomaExamen</code>.
     */
    public PanelPresentacionDatosRed(PanelPresentacion padre) {
        this.padre = padre;
        gestRed = new GestorRedAdHoc(this);
        initComponents();
        habilitarRadioButtons();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btgOpcionesDeRedes = new javax.swing.ButtonGroup();
        pnlOpcionesRed = new javax.swing.JPanel();
        pnlNuevaRed = new javax.swing.JPanel();
        rbnNuevaRed = new javax.swing.JRadioButton();
        pnlDatosNuevaRed = new javax.swing.JPanel();
        lblNombreRedNueva = new javax.swing.JLabel();
        lblContraseña = new javax.swing.JLabel();
        lblContraseña2 = new javax.swing.JLabel();
        txtNombreRedNueva = new frontend.auxiliares.TextFieldEntropy();
        txtContraseña = new javax.swing.JPasswordField();
        txtContraseña2 = new javax.swing.JPasswordField();
        btnCrear = new javax.swing.JButton();
        pnlRedExistente = new javax.swing.JPanel();
        rbnRedExistente = new javax.swing.JRadioButton();
        pnlDatosDeRed = new javax.swing.JPanel();
        lblsIpRed = new javax.swing.JLabel();
        lblIpRed = new javax.swing.JLabel();

        pnlOpcionesRed.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Opciones de red", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, LookAndFeelEntropy.FUENTE_REGULAR, new java.awt.Color(204, 102, 0)));
        pnlOpcionesRed.setLayout(new javax.swing.BoxLayout(pnlOpcionesRed, javax.swing.BoxLayout.Y_AXIS));

        pnlNuevaRed.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btgOpcionesDeRedes.add(rbnNuevaRed);
        rbnNuevaRed.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        rbnNuevaRed.setSelected(true);
        rbnNuevaRed.setText("Crear una nueva red (ad-hoc)");
        rbnNuevaRed.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbnNuevaRedItemStateChanged(evt);
            }
        });

        lblNombreRedNueva.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblNombreRedNueva.setText("Nombre de red:");

        lblContraseña.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblContraseña.setText("Contraseña:");

        lblContraseña2.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblContraseña2.setText("Confirmar contraseña:");

        txtContraseña.setForeground(new java.awt.Color(204, 102, 0));
        txtContraseña.setCaretColor(LookAndFeelEntropy.COLOR_CURSOR);
        txtContraseña.setSelectionColor(LookAndFeelEntropy.COLOR_SELECCION_TEXTO);

        txtContraseña2.setForeground(new java.awt.Color(204, 102, 0));
        txtContraseña2.setCaretColor(LookAndFeelEntropy.COLOR_CURSOR);
        txtContraseña2.setSelectionColor(LookAndFeelEntropy.COLOR_SELECCION_TEXTO);

        btnCrear.setFont(LookAndFeelEntropy.FUENTE_TITULO);
        btnCrear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_crear_red.png"))); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setBorder(null);
        btnCrear.setContentAreaFilled(false);
        btnCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCrear.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_crear_red_mouse_over.png"))); // NOI18N
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDatosNuevaRedLayout = new javax.swing.GroupLayout(pnlDatosNuevaRed);
        pnlDatosNuevaRed.setLayout(pnlDatosNuevaRedLayout);
        pnlDatosNuevaRedLayout.setHorizontalGroup(
            pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosNuevaRedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDatosNuevaRedLayout.createSequentialGroup()
                        .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblContraseña2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblNombreRedNueva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblContraseña, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreRedNueva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtContraseña)
                            .addComponent(txtContraseña2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlDatosNuevaRedLayout.setVerticalGroup(
            pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosNuevaRedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreRedNueva)
                    .addComponent(txtNombreRedNueva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContraseña)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlDatosNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblContraseña2)
                    .addComponent(txtContraseña2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnCrear)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlNuevaRedLayout = new javax.swing.GroupLayout(pnlNuevaRed);
        pnlNuevaRed.setLayout(pnlNuevaRedLayout);
        pnlNuevaRedLayout.setHorizontalGroup(
            pnlNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaRedLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlNuevaRedLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(pnlDatosNuevaRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlNuevaRedLayout.createSequentialGroup()
                        .addComponent(rbnNuevaRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(103, 103, 103)))
                .addContainerGap())
        );
        pnlNuevaRedLayout.setVerticalGroup(
            pnlNuevaRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlNuevaRedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnNuevaRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlDatosNuevaRed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlOpcionesRed.add(pnlNuevaRed);

        pnlRedExistente.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        btgOpcionesDeRedes.add(rbnRedExistente);
        rbnRedExistente.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        rbnRedExistente.setText("Utilizar la red a la que se encuentra conectado");
        rbnRedExistente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rbnRedExistenteItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout pnlRedExistenteLayout = new javax.swing.GroupLayout(pnlRedExistente);
        pnlRedExistente.setLayout(pnlRedExistenteLayout);
        pnlRedExistenteLayout.setHorizontalGroup(
            pnlRedExistenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlRedExistenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnRedExistente, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlRedExistenteLayout.setVerticalGroup(
            pnlRedExistenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlRedExistenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnRedExistente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlOpcionesRed.add(pnlRedExistente);

        pnlDatosDeRed.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        lblsIpRed.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsIpRed.setForeground(new java.awt.Color(204, 102, 0));
        lblsIpRed.setText("IP de su equipo:");

        lblIpRed.setFont(LookAndFeelEntropy.FUENTE_CURSIVA);
        lblIpRed.setText("Red no identificada");

        javax.swing.GroupLayout pnlDatosDeRedLayout = new javax.swing.GroupLayout(pnlDatosDeRed);
        pnlDatosDeRed.setLayout(pnlDatosDeRedLayout);
        pnlDatosDeRedLayout.setHorizontalGroup(
            pnlDatosDeRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosDeRedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblsIpRed)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIpRed, javax.swing.GroupLayout.DEFAULT_SIZE, 309, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlDatosDeRedLayout.setVerticalGroup(
            pnlDatosDeRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosDeRedLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(pnlDatosDeRedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsIpRed)
                    .addComponent(lblIpRed))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlOpcionesRed.add(pnlDatosDeRed);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlOpcionesRed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 425, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlOpcionesRed, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rbnNuevaRedItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbnNuevaRedItemStateChanged
        this.habilitarRadioButtons();
    }//GEN-LAST:event_rbnNuevaRedItemStateChanged

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        if (this.txtNombreRedNueva.getText().trim().isEmpty() || this.txtContraseña.getText().isEmpty() || this.txtContraseña2.getText().isEmpty()) {
            Mensajes.mostrarError("Todos los campos son obligatorios.");
        } else {
            gestRed.redAdHoc(this.txtNombreRedNueva.getText(), this.txtContraseña.getText(), this.txtContraseña2.getText());
        }
    }//GEN-LAST:event_btnCrearActionPerformed

    private void rbnRedExistenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rbnRedExistenteItemStateChanged
        this.habilitarRadioButtons();
        this.lblIpRed.setText(gestRed.getIP());
    }//GEN-LAST:event_rbnRedExistenteItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btgOpcionesDeRedes;
    private javax.swing.JButton btnCrear;
    private javax.swing.JLabel lblContraseña;
    private javax.swing.JLabel lblContraseña2;
    private javax.swing.JLabel lblIpRed;
    private javax.swing.JLabel lblNombreRedNueva;
    private javax.swing.JLabel lblsIpRed;
    private javax.swing.JPanel pnlDatosDeRed;
    private javax.swing.JPanel pnlDatosNuevaRed;
    private javax.swing.JPanel pnlNuevaRed;
    private javax.swing.JPanel pnlOpcionesRed;
    private javax.swing.JPanel pnlRedExistente;
    private javax.swing.JRadioButton rbnNuevaRed;
    private javax.swing.JRadioButton rbnRedExistente;
    private javax.swing.JPasswordField txtContraseña;
    private javax.swing.JPasswordField txtContraseña2;
    private frontend.auxiliares.TextFieldEntropy txtNombreRedNueva;
    // End of variables declaration//GEN-END:variables

    /**
     * Habilita o deshabilita recursivamente objetos contenedores.
     *
     * @param contenedorHabilitar contenedor a deshabilitar
     * @param habilitar true = habilitar, false = deshabilitar
     */
    private void habilitarContenedor(Container contenedorHabilitar, boolean habilitar) {
        for (Component componente : contenedorHabilitar.getComponents()) {
            if (componente instanceof Container) {
                this.habilitarContenedor((Container) componente, habilitar);
            }
            componente.setEnabled(habilitar);
        }
    }

    /**
     * Funcionalidad a llamarse al seleccionar un radiobutton.
     */
    private void habilitarRadioButtons() {
        if (rbnNuevaRed.isSelected()) {
            habilitarContenedor(pnlDatosNuevaRed, true);
            txtNombreRedNueva.grabFocus();
            this.lblIpRed.setText("Red no identificada");
        } else {
            habilitarContenedor(pnlDatosNuevaRed, false);
            habilitarContenedor(pnlDatosDeRed, true);
        }
    }

    /**
     * Carga una IP en el label correspondiente.
     *
     * @param ipAddress IP a mostrar.
     */
    @Override
    public void setIpAddress(String ipAddress) {
        this.lblIpRed.setText(ipAddress);
    }

    /**
     * Valida que los campos obligatorio de la pantalla hayan sido ingresados.
     *
     * @return true si todos los campos son correctos, false de lo contrario.
     */
    public boolean validarDatosObligatorios() {
        if ((rbnNuevaRed.isSelected()
                && (this.txtNombreRedNueva.getText().trim().isEmpty()
                || this.txtContraseña.getText().isEmpty()
                || this.txtContraseña2.getText().isEmpty()))
                || (!rbnNuevaRed.isSelected()
                && (lblIpRed.getText().startsWith("127") || lblIpRed.getText().startsWith("169.254")))) {
            return false;
        }
        return true;
    }

}
