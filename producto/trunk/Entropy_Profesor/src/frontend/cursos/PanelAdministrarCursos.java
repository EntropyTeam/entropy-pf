package frontend.cursos;

import backend.auxiliares.Mensajes;
import backend.dao.diseños.DAOCurso;
import backend.diseños.Curso;
import backend.diseños.Institucion;
import backend.gestores.GestorCursosEInstituciones;
import backend.gestores.GestorExamen;
import frontend.auxiliares.CeldaListaRendererEntropy;
import frontend.auxiliares.GestorBarrasDeEstado;
import frontend.auxiliares.GestorImagenes;
import frontend.inicio.VentanaPrincipal;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ComponentAdapter;
import java.awt.event.ComponentEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 * Clase que representa la interfaz de gestión de cursos e instituciones.
 *
 * @author Denise
 */
public class PanelAdministrarCursos extends javax.swing.JPanel {

    private final VentanaPrincipal mPadre;
    private final GestorBarrasDeEstado gestorEstados, gestorEstadosDialogInstituciones, gestorEstadosDialogCursos;
    private final GestorCursosEInstituciones gestorCursosEInstituciones;
    private boolean blnEdicion = false;
    private boolean blnEdicionCurso = false;
    private byte[] bytesImagen = null;

    /**
     * Constructor de la clase.
     *
     * @param mPadre ventana principal de la aplicación
     */
    public PanelAdministrarCursos(VentanaPrincipal mPadre) {
        this.mPadre = mPadre;
        initComponents();
        this.gestorEstados = new GestorBarrasDeEstado(lblActualizacionEstado, lblIconoEstado);
        this.gestorEstadosDialogInstituciones = new GestorBarrasDeEstado(lblEstadoInstitucion, lblIconoEstadoInstitucion);
        this.gestorEstadosDialogCursos = new GestorBarrasDeEstado(lblEstadoCurso, lblIconoEstadoCurso);

        this.gestorCursosEInstituciones = new GestorCursosEInstituciones();
        this.gestorCursosEInstituciones.setInstituciones(this.gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));

        this.dlgEditarInstitucion.setPreferredSize(new Dimension(
                this.dlgEditarInstitucion.getPreferredSize().width + this.pnlEstadoInstitucion.getPreferredSize().width,
                this.dlgEditarInstitucion.getPreferredSize().height + this.pnlEstadoInstitucion.getPreferredSize().height
        ));
        this.dlgEditarCurso.setPreferredSize(new Dimension(
                this.dlgEditarCurso.getPreferredSize().width + this.pnlEstadoCurso.getPreferredSize().width,
                this.dlgEditarCurso.getPreferredSize().height + this.pnlEstadoCurso.getPreferredSize().height
        ));
        this.dlgEditarCurso.setIconImage(GestorImagenes.crearImage("/frontend/imagenes/ic_system.png"));
        this.dlgEditarInstitucion.setIconImage(GestorImagenes.crearImage("/frontend/imagenes/ic_system.png"));

        llenarListaInstituciones(this.gestorCursosEInstituciones.getInstituciones()); // Trae todas las instituciones cargadas desde la base de datos

        this.addComponentListener(new ComponentAdapter() {
            @Override
            public void componentResized(ComponentEvent e) {
                pnlInstituciones.setMaximumSize(new Dimension((getWidth() / 2) - 28, 32767));
                pnlInstituciones.setPreferredSize(new Dimension((getWidth() / 2) - 28, pnlCursos.getHeight()));
                pnlInstituciones.setSize(new Dimension((getWidth() / 2) - 28, pnlCursos.getHeight()));
                revalidate();
                repaint();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dlgEditarInstitucion = new javax.swing.JDialog();
        pnlLogo = new javax.swing.JPanel();
        btnCargarLogo = new javax.swing.JButton();
        btnBorrarLogo = new javax.swing.JButton();
        pnlImagenLogo = new frontend.auxiliares.PanelConFondo();
        lblLogo = new javax.swing.JLabel();
        pnlDatosInstitucion = new javax.swing.JPanel();
        lblNombreInstitucion = new javax.swing.JLabel();
        lblDescripcionInstitucion = new javax.swing.JLabel();
        pnlBotonesInstitucion = new javax.swing.JPanel();
        btnVolverInstitucion = new javax.swing.JButton();
        btnGuardarInstitucion = new javax.swing.JButton();
        txtNombreInstitucion = new frontend.auxiliares.TextFieldEntropy();
        scrDescripcionInstitucion = new javax.swing.JScrollPane();
        txaDescripcionInstitucion = new frontend.auxiliares.TextAreaEntropy();
        pnlEstadoInstitucion = new javax.swing.JPanel();
        lblEstadoInstitucion = new javax.swing.JLabel();
        lblIconoEstadoInstitucion = new javax.swing.JLabel();
        dlgEditarCurso = new javax.swing.JDialog();
        pnlDatosCurso = new javax.swing.JPanel();
        lblNombreCurso = new javax.swing.JLabel();
        lblDescripcionCurso = new javax.swing.JLabel();
        pnlBotonesCurso = new javax.swing.JPanel();
        btnVolverCurso = new javax.swing.JButton();
        btnGuardarCurso = new javax.swing.JButton();
        txtNombreCurso = new frontend.auxiliares.TextFieldEntropy();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaDescripcionCurso = new frontend.auxiliares.TextAreaEntropy();
        pnlEstadoCurso = new javax.swing.JPanel();
        lblEstadoCurso = new javax.swing.JLabel();
        lblIconoEstadoCurso = new javax.swing.JLabel();
        pnlEstado = new javax.swing.JPanel();
        lblActualizacionEstado = new javax.swing.JLabel();
        lblIconoEstado = new javax.swing.JLabel();
        pnlBotones = new javax.swing.JPanel();
        btnImprimir = new javax.swing.JButton();
        btnVolverInicio = new javax.swing.JButton();
        pnlCentral = new javax.swing.JPanel();
        pnlInstituciones = new javax.swing.JPanel();
        scrInstituciones = new javax.swing.JScrollPane();
        lstInstituciones = new javax.swing.JList();
        btnEliminarInstitucion = new javax.swing.JButton();
        btnNuevaInstitucion = new javax.swing.JButton();
        txtFiltroInstitucion = new frontend.auxiliares.TextFieldEntropy();
        lblSeparador = new javax.swing.JLabel();
        pnlCursos = new javax.swing.JPanel();
        scrCursos = new javax.swing.JScrollPane();
        lstCursos = new javax.swing.JList();
        btnNuevoCurso = new javax.swing.JButton();
        btnEliminarCurso = new javax.swing.JButton();
        txtFiltroCurso = new frontend.auxiliares.TextFieldEntropy();

        dlgEditarInstitucion.setIconImage(null);
        dlgEditarInstitucion.setIconImages(null);
        dlgEditarInstitucion.setModal(true);
        dlgEditarInstitucion.addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                dlgEditarInstitucionWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                dlgEditarInstitucionWindowClosing(evt);
            }
        });

        pnlLogo.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Logo", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pnlLogo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        btnCargarLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_actualizar25x25.png"))); // NOI18N
        btnCargarLogo.setToolTipText("");
        btnCargarLogo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCargarLogo.setContentAreaFilled(false);
        btnCargarLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCargarLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCargarLogoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCargarLogoMouseExited(evt);
            }
        });
        btnCargarLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarLogoActionPerformed(evt);
            }
        });

        btnBorrarLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_papelera25x25.png"))); // NOI18N
        btnBorrarLogo.setToolTipText("");
        btnBorrarLogo.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnBorrarLogo.setContentAreaFilled(false);
        btnBorrarLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnBorrarLogo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnBorrarLogoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnBorrarLogoMouseExited(evt);
            }
        });
        btnBorrarLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBorrarLogoActionPerformed(evt);
            }
        });

        pnlImagenLogo.setPreferredSize(new java.awt.Dimension(155, 155));

        lblLogo.setBackground(new java.awt.Color(248, 246, 246));
        lblLogo.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblLogo.setForeground(new java.awt.Color(102, 102, 102));
        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_camara.png"))); // NOI18N
        lblLogo.setText("Sin imagen");
        lblLogo.setToolTipText("Imagen");
        lblLogo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblLogo.setOpaque(true);
        lblLogo.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout pnlImagenLogoLayout = new javax.swing.GroupLayout(pnlImagenLogo);
        pnlImagenLogo.setLayout(pnlImagenLogoLayout);
        pnlImagenLogoLayout.setHorizontalGroup(
            pnlImagenLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlImagenLogoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlImagenLogoLayout.setVerticalGroup(
            pnlImagenLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblLogo, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnlLogoLayout = new javax.swing.GroupLayout(pnlLogo);
        pnlLogo.setLayout(pnlLogoLayout);
        pnlLogoLayout.setHorizontalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnBorrarLogo)
                    .addComponent(btnCargarLogo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnlLogoLayout.setVerticalGroup(
            pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLogoLayout.createSequentialGroup()
                .addGroup(pnlLogoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLogoLayout.createSequentialGroup()
                        .addComponent(btnCargarLogo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBorrarLogo))
                    .addComponent(pnlImagenLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDatosInstitucion.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pnlDatosInstitucion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        lblNombreInstitucion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblNombreInstitucion.setText("Nombre:");

        lblDescripcionInstitucion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblDescripcionInstitucion.setText("Descripción:");

        pnlBotonesInstitucion.setLayout(new java.awt.GridLayout(1, 0));

        btnVolverInstitucion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnVolverInstitucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_volver.png"))); // NOI18N
        btnVolverInstitucion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolverInstitucion.setContentAreaFilled(false);
        btnVolverInstitucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolverInstitucion.setIconTextGap(10);
        btnVolverInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverInstitucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverInstitucionMouseExited(evt);
            }
        });
        btnVolverInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverInstitucionActionPerformed(evt);
            }
        });
        pnlBotonesInstitucion.add(btnVolverInstitucion);

        btnGuardarInstitucion.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnGuardarInstitucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_guardar.png"))); // NOI18N
        btnGuardarInstitucion.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardarInstitucion.setContentAreaFilled(false);
        btnGuardarInstitucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarInstitucion.setIconTextGap(10);
        btnGuardarInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarInstitucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarInstitucionMouseExited(evt);
            }
        });
        btnGuardarInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarInstitucionActionPerformed(evt);
            }
        });
        pnlBotonesInstitucion.add(btnGuardarInstitucion);

        txtNombreInstitucion.setTextoPorDefecto("Ingrese un nombre");
        txtNombreInstitucion.mostrarTextoPorDefecto();

        txaDescripcionInstitucion.setTextoPorDefecto("Ingrese una descripción");
        txaDescripcionInstitucion.mostrarTextoPorDefecto();
        txaDescripcionInstitucion.setColumns(20);
        txaDescripcionInstitucion.setRows(2);
        scrDescripcionInstitucion.setViewportView(txaDescripcionInstitucion);

        javax.swing.GroupLayout pnlDatosInstitucionLayout = new javax.swing.GroupLayout(pnlDatosInstitucion);
        pnlDatosInstitucion.setLayout(pnlDatosInstitucionLayout);
        pnlDatosInstitucionLayout.setHorizontalGroup(
            pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosInstitucionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlBotonesInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDatosInstitucionLayout.createSequentialGroup()
                        .addGroup(pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombreInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescripcionInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE)
                            .addComponent(scrDescripcionInstitucion))))
                .addContainerGap())
        );
        pnlDatosInstitucionLayout.setVerticalGroup(
            pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosInstitucionLayout.createSequentialGroup()
                .addGroup(pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreInstitucion)
                    .addComponent(txtNombreInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosInstitucionLayout.createSequentialGroup()
                        .addComponent(lblDescripcionInstitucion)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(scrDescripcionInstitucion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotonesInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlEstadoInstitucion.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));

        lblEstadoInstitucion.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblEstadoInstitucion.setForeground(new java.awt.Color(102, 102, 102));
        lblEstadoInstitucion.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEstadoInstitucion.setText("Acá se escriben estados...");
        lblEstadoInstitucion.setAlignmentX(0.5F);
        lblEstadoInstitucion.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIconoEstadoInstitucion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconoEstadoInstitucion.setText(" ");
        lblIconoEstadoInstitucion.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout pnlEstadoInstitucionLayout = new javax.swing.GroupLayout(pnlEstadoInstitucion);
        pnlEstadoInstitucion.setLayout(pnlEstadoInstitucionLayout);
        pnlEstadoInstitucionLayout.setHorizontalGroup(
            pnlEstadoInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadoInstitucionLayout.createSequentialGroup()
                .addComponent(lblEstadoInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIconoEstadoInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEstadoInstitucionLayout.setVerticalGroup(
            pnlEstadoInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstadoInstitucionLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlEstadoInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconoEstadoInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout dlgEditarInstitucionLayout = new javax.swing.GroupLayout(dlgEditarInstitucion.getContentPane());
        dlgEditarInstitucion.getContentPane().setLayout(dlgEditarInstitucionLayout);
        dlgEditarInstitucionLayout.setHorizontalGroup(
            dlgEditarInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditarInstitucionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgEditarInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dlgEditarInstitucionLayout.createSequentialGroup()
                        .addComponent(pnlLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDatosInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlEstadoInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dlgEditarInstitucionLayout.setVerticalGroup(
            dlgEditarInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditarInstitucionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgEditarInstitucionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDatosInstitucion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlLogo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEstadoInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        dlgEditarCurso.setIconImage(null);
        dlgEditarCurso.setIconImages(null);
        dlgEditarCurso.setModal(true);

        pnlDatosCurso.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pnlDatosCurso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        pnlDatosCurso.setMinimumSize(pnlDatosCurso.getPreferredSize());

        lblNombreCurso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblNombreCurso.setText("Nombre:");

        lblDescripcionCurso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lblDescripcionCurso.setText("Descripción:");

        pnlBotonesCurso.setLayout(new java.awt.GridLayout(1, 0));

        btnVolverCurso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnVolverCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_volver.png"))); // NOI18N
        btnVolverCurso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolverCurso.setContentAreaFilled(false);
        btnVolverCurso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolverCurso.setIconTextGap(10);
        btnVolverCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverCursoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverCursoMouseExited(evt);
            }
        });
        btnVolverCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverCursoActionPerformed(evt);
            }
        });
        pnlBotonesCurso.add(btnVolverCurso);

        btnGuardarCurso.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnGuardarCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_guardar.png"))); // NOI18N
        btnGuardarCurso.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnGuardarCurso.setContentAreaFilled(false);
        btnGuardarCurso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnGuardarCurso.setIconTextGap(10);
        btnGuardarCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarCursoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarCursoMouseExited(evt);
            }
        });
        btnGuardarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCursoActionPerformed(evt);
            }
        });
        pnlBotonesCurso.add(btnGuardarCurso);

        txtNombreCurso.setTextoPorDefecto("Ingrese un nombre");
        txtNombreCurso.mostrarTextoPorDefecto();

        txaDescripcionCurso.setTextoPorDefecto("Ingrese una descripción");
        txaDescripcionCurso.mostrarTextoPorDefecto();
        txaDescripcionCurso.setColumns(20);
        txaDescripcionCurso.setRows(2);
        jScrollPane1.setViewportView(txaDescripcionCurso);

        javax.swing.GroupLayout pnlDatosCursoLayout = new javax.swing.GroupLayout(pnlDatosCurso);
        pnlDatosCurso.setLayout(pnlDatosCursoLayout);
        pnlDatosCursoLayout.setHorizontalGroup(
            pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosCursoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(pnlBotonesCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlDatosCursoLayout.createSequentialGroup()
                        .addGroup(pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDescripcionCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombreCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 257, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pnlDatosCursoLayout.setVerticalGroup(
            pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosCursoLayout.createSequentialGroup()
                .addGroup(pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNombreCurso)
                    .addComponent(txtNombreCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosCursoLayout.createSequentialGroup()
                        .addComponent(lblDescripcionCurso)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlBotonesCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlEstadoCurso.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));

        lblEstadoCurso.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblEstadoCurso.setForeground(new java.awt.Color(102, 102, 102));
        lblEstadoCurso.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblEstadoCurso.setText("Acá se escriben estados...");
        lblEstadoCurso.setAlignmentX(0.5F);
        lblEstadoCurso.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIconoEstadoCurso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconoEstadoCurso.setText(" ");
        lblIconoEstadoCurso.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout pnlEstadoCursoLayout = new javax.swing.GroupLayout(pnlEstadoCurso);
        pnlEstadoCurso.setLayout(pnlEstadoCursoLayout);
        pnlEstadoCursoLayout.setHorizontalGroup(
            pnlEstadoCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadoCursoLayout.createSequentialGroup()
                .addComponent(lblEstadoCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIconoEstadoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEstadoCursoLayout.setVerticalGroup(
            pnlEstadoCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstadoCursoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlEstadoCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEstadoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconoEstadoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        javax.swing.GroupLayout dlgEditarCursoLayout = new javax.swing.GroupLayout(dlgEditarCurso.getContentPane());
        dlgEditarCurso.getContentPane().setLayout(dlgEditarCursoLayout);
        dlgEditarCursoLayout.setHorizontalGroup(
            dlgEditarCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditarCursoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dlgEditarCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlDatosCurso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEstadoCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        dlgEditarCursoLayout.setVerticalGroup(
            dlgEditarCursoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dlgEditarCursoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlDatosCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEstadoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pnlEstado.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));

        lblActualizacionEstado.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblActualizacionEstado.setForeground(new java.awt.Color(102, 102, 102));
        lblActualizacionEstado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblActualizacionEstado.setText("Acá se escriben estados...");
        lblActualizacionEstado.setAlignmentX(0.5F);
        lblActualizacionEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIconoEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconoEstado.setText(" ");
        lblIconoEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout pnlEstadoLayout = new javax.swing.GroupLayout(pnlEstado);
        pnlEstado.setLayout(pnlEstadoLayout);
        pnlEstadoLayout.setHorizontalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadoLayout.createSequentialGroup()
                .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEstadoLayout.setVerticalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstadoLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlBotones.setLayout(new java.awt.GridLayout(1, 0));

        btnImprimir.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_estadisticas_35x35.png"))); // NOI18N
        btnImprimir.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnImprimir.setContentAreaFilled(false);
        btnImprimir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnImprimir.setIconTextGap(10);
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImprimirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnImprimirMouseExited(evt);
            }
        });
        btnImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImprimirActionPerformed(evt);
            }
        });
        pnlBotones.add(btnImprimir);

        btnVolverInicio.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        btnVolverInicio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_inicio.png"))); // NOI18N
        btnVolverInicio.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnVolverInicio.setContentAreaFilled(false);
        btnVolverInicio.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVolverInicio.setIconTextGap(10);
        btnVolverInicio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVolverInicioMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVolverInicioMouseExited(evt);
            }
        });
        btnVolverInicio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolverInicioActionPerformed(evt);
            }
        });
        pnlBotones.add(btnVolverInicio);

        pnlCentral.setLayout(new javax.swing.BoxLayout(pnlCentral, javax.swing.BoxLayout.LINE_AXIS));

        pnlInstituciones.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Instituciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(204, 102, 0))); // NOI18N
        pnlInstituciones.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        scrInstituciones.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 0)));
        scrInstituciones.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        lstInstituciones.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lstInstituciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstInstituciones.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lstInstituciones.setSelectedIndex(0);
        lstInstituciones.setSelectionBackground(new java.awt.Color(255, 204, 102));
        lstInstituciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstInstitucionesMouseClicked(evt);
            }
        });
        lstInstituciones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstInstitucionesValueChanged(evt);
            }
        });
        scrInstituciones.setViewportView(lstInstituciones);
        lstInstituciones.setCellRenderer(new CeldaListaRendererEntropy());

        btnEliminarInstitucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_borrar_25x25.png"))); // NOI18N
        btnEliminarInstitucion.setToolTipText("");
        btnEliminarInstitucion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminarInstitucion.setContentAreaFilled(false);
        btnEliminarInstitucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarInstitucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarInstitucionMouseExited(evt);
            }
        });
        btnEliminarInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarInstitucionActionPerformed(evt);
            }
        });

        btnNuevaInstitucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_nuevo_25x25.png"))); // NOI18N
        btnNuevaInstitucion.setToolTipText("");
        btnNuevaInstitucion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevaInstitucion.setContentAreaFilled(false);
        btnNuevaInstitucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevaInstitucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevaInstitucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevaInstitucionMouseExited(evt);
            }
        });
        btnNuevaInstitucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaInstitucionActionPerformed(evt);
            }
        });

        txtFiltroInstitucion.setTextoPorDefecto("Filtrar por nombre");
        txtFiltroInstitucion.mostrarTextoPorDefecto();
        txtFiltroInstitucion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroInstitucionKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlInstitucionesLayout = new javax.swing.GroupLayout(pnlInstituciones);
        pnlInstituciones.setLayout(pnlInstitucionesLayout);
        pnlInstitucionesLayout.setHorizontalGroup(
            pnlInstitucionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrInstituciones, javax.swing.GroupLayout.DEFAULT_SIZE, 252, Short.MAX_VALUE)
            .addGroup(pnlInstitucionesLayout.createSequentialGroup()
                .addComponent(btnNuevaInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarInstitucion)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(txtFiltroInstitucion, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlInstitucionesLayout.setVerticalGroup(
            pnlInstitucionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInstitucionesLayout.createSequentialGroup()
                .addComponent(txtFiltroInstitucion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrInstituciones, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInstitucionesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevaInstitucion)
                    .addComponent(btnEliminarInstitucion)))
        );

        pnlCentral.add(pnlInstituciones);

        lblSeparador.setBackground(new java.awt.Color(227, 226, 226));
        lblSeparador.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblSeparador.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_siguiente.png"))); // NOI18N
        lblSeparador.setToolTipText("");
        lblSeparador.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        lblSeparador.setMaximumSize(new java.awt.Dimension(30, 6674));
        lblSeparador.setOpaque(true);
        pnlCentral.add(lblSeparador);

        pnlCursos.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cursos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(204, 102, 0))); // NOI18N
        pnlCursos.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        scrCursos.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 0)));
        scrCursos.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        lstCursos.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lstCursos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lstCursos.setSelectionBackground(new java.awt.Color(255, 204, 102));
        lstCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstCursosMouseClicked(evt);
            }
        });
        scrCursos.setViewportView(lstCursos);
        lstCursos.setCellRenderer(new CeldaListaRendererEntropy());

        btnNuevoCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_nuevo_25x25.png"))); // NOI18N
        btnNuevoCurso.setToolTipText("");
        btnNuevoCurso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnNuevoCurso.setContentAreaFilled(false);
        btnNuevoCurso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnNuevoCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnNuevoCursoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnNuevoCursoMouseExited(evt);
            }
        });
        btnNuevoCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoCursoActionPerformed(evt);
            }
        });

        btnEliminarCurso.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_borrar_25x25.png"))); // NOI18N
        btnEliminarCurso.setToolTipText("");
        btnEliminarCurso.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnEliminarCurso.setContentAreaFilled(false);
        btnEliminarCurso.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminarCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarCursoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarCursoMouseExited(evt);
            }
        });
        btnEliminarCurso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCursoActionPerformed(evt);
            }
        });

        txtFiltroCurso.setTextoPorDefecto("Filtrar por nombre");
        txtFiltroCurso.mostrarTextoPorDefecto();
        txtFiltroCurso.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtFiltroCursoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout pnlCursosLayout = new javax.swing.GroupLayout(pnlCursos);
        pnlCursos.setLayout(pnlCursosLayout);
        pnlCursosLayout.setHorizontalGroup(
            pnlCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrCursos)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCursosLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnNuevoCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEliminarCurso))
            .addComponent(txtFiltroCurso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnlCursosLayout.setVerticalGroup(
            pnlCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCursosLayout.createSequentialGroup()
                .addComponent(txtFiltroCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrCursos, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlCursosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnNuevoCurso)
                    .addComponent(btnEliminarCurso)))
        );

        pnlCentral.add(pnlCursos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlBotones, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlBotones, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlCentral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnNuevaInstitucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaInstitucionMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Crear una nueva institución.");
    }//GEN-LAST:event_btnNuevaInstitucionMouseEntered

    private void btnNuevaInstitucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevaInstitucionMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnNuevaInstitucionMouseExited

    private void btnNuevaInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaInstitucionActionPerformed
        this.limpiarCamposDialogInstituciones();
        this.dlgEditarInstitucion.setSize(this.dlgEditarInstitucion.getPreferredSize());
        this.dlgEditarInstitucion.setLocationRelativeTo(mPadre);
        this.dlgEditarInstitucion.setTitle("Nueva institución");
        this.blnEdicion = false;
        this.dlgEditarInstitucion.setVisible(true);
        this.txtNombreInstitucion.grabFocus();
    }//GEN-LAST:event_btnNuevaInstitucionActionPerformed

    private void btnEliminarInstitucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarInstitucionMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Eliminar institución y cursos asociados.");
    }//GEN-LAST:event_btnEliminarInstitucionMouseEntered

    private void btnEliminarInstitucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarInstitucionMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnEliminarInstitucionMouseExited

    private void btnNuevoCursoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoCursoMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Crear un nuevo curso para la institución seleccionada.");
    }//GEN-LAST:event_btnNuevoCursoMouseEntered

    private void btnNuevoCursoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnNuevoCursoMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnNuevoCursoMouseExited

    private void btnNuevoCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoCursoActionPerformed
        if (lstInstituciones.getSelectedValue() != null) {
            this.limpiarCamposDialogCursos();
            this.dlgEditarCurso.setSize(this.dlgEditarCurso.getPreferredSize());
            this.dlgEditarCurso.setLocationRelativeTo(mPadre);
            this.dlgEditarCurso.setTitle("Nuevo curso");
            this.blnEdicionCurso = false;
            this.dlgEditarCurso.setVisible(true);
        } else {
            Mensajes.mostrarError("Debe seleccionar una institución.");
        }
    }//GEN-LAST:event_btnNuevoCursoActionPerformed

    private void btnEliminarCursoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarCursoMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Eliminar curso seleccionado.");
    }//GEN-LAST:event_btnEliminarCursoMouseEntered

    private void btnEliminarCursoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarCursoMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnEliminarCursoMouseExited

    private void btnEliminarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCursoActionPerformed
        if (((Curso) lstCursos.getSelectedValue()) != null) {
            boolean mensaje = Mensajes.mostrarConfirmacion("¿Desea borrar el curso \"" + ((Curso) lstCursos.getSelectedValue()) + "\"?");
            if (mensaje) {
                int intIdInstitucion = ((Institucion) lstInstituciones.getSelectedValue()).getIntInstitucionId();
                int intIdCurso = ((Curso) lstCursos.getSelectedValue()).getIntCursoId();
                gestorCursosEInstituciones.eliminarCurso(intIdCurso, intIdInstitucion);
                Mensajes.mostrarInformacion("Se ha borrado el curso");
                this.gestorCursosEInstituciones.setInstituciones(this.gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));
                llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), "");
            }
        } else {
            Mensajes.mostrarError("Debe seleccionar un curso.");
        }
    }//GEN-LAST:event_btnEliminarCursoActionPerformed

    private void btnEliminarInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarInstitucionActionPerformed
        if (((Institucion) lstInstituciones.getSelectedValue()) != null) {
            boolean mensaje = Mensajes.mostrarConfirmacion("¿Desea borrar la institución \"" + ((Institucion) lstInstituciones.getSelectedValue()) + "\"?");
            if (mensaje) {
                int intIdInstitucion = ((Institucion) lstInstituciones.getSelectedValue()).getIntInstitucionId();
                gestorCursosEInstituciones.eliminarInstitucion(intIdInstitucion);
                this.gestorCursosEInstituciones.setInstituciones(this.gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));
                llenarListaInstituciones(this.gestorCursosEInstituciones.getInstituciones());
                gestorEstados.setNuevoEstadoImportante("La institución se ha borrado correctamente.", GestorBarrasDeEstado.TipoEstado.OK);
            }
        } else {
            Mensajes.mostrarError("Debe seleccionar una institución.");
        }

    }//GEN-LAST:event_btnEliminarInstitucionActionPerformed

    private void btnBorrarLogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarLogoMouseEntered
        this.gestorEstadosDialogInstituciones.setEstadoInstantaneo("Quitar la imagen actual.");
    }//GEN-LAST:event_btnBorrarLogoMouseEntered

    private void btnBorrarLogoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnBorrarLogoMouseExited
        this.gestorEstadosDialogInstituciones.volverAEstadoImportante();
    }//GEN-LAST:event_btnBorrarLogoMouseExited

    private void btnCargarLogoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarLogoMouseEntered
        this.gestorEstadosDialogInstituciones.setEstadoInstantaneo("Cargar un nuevo logo para esta institución.");
    }//GEN-LAST:event_btnCargarLogoMouseEntered

    private void btnCargarLogoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCargarLogoMouseExited
        this.gestorEstadosDialogInstituciones.volverAEstadoImportante();
    }//GEN-LAST:event_btnCargarLogoMouseExited

    private void btnGuardarInstitucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarInstitucionMouseEntered
        this.gestorEstadosDialogInstituciones.setEstadoInstantaneo("Guardar institución en la base de datos.");
    }//GEN-LAST:event_btnGuardarInstitucionMouseEntered

    private void btnGuardarInstitucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarInstitucionMouseExited
        this.gestorEstadosDialogInstituciones.volverAEstadoImportante();
    }//GEN-LAST:event_btnGuardarInstitucionMouseExited

    private void btnGuardarInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarInstitucionActionPerformed
        if (validarCamposInstitucion()) {
            if (lstInstituciones.getSelectedValue() != null && this.blnEdicion) // Se va editar una institucion
            {
                String strNombreInstitucion = txtNombreInstitucion.getText();
                int intIdInstitucion = ((Institucion) lstInstituciones.getSelectedValue()).getIntInstitucionId();
                Object logoInstitucion = bytesImagen;
                String strDescripcionInstitucion = txaDescripcionInstitucion.getText();
                Institucion institucion = new Institucion(intIdInstitucion, strNombreInstitucion, strDescripcionInstitucion, logoInstitucion);
                gestorCursosEInstituciones.guardarInstitucion(institucion, true);
                gestorEstados.setNuevoEstadoImportante("Los datos de la institución han sido actualizados.", GestorBarrasDeEstado.TipoEstado.OK);
                this.gestorCursosEInstituciones.setInstituciones(this.gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));
                llenarListaInstituciones(this.gestorCursosEInstituciones.getInstituciones());
                this.dlgEditarInstitucion.setVisible(false);
            } else {
                String strNombre = txtNombreInstitucion.getText();
                String strDescripcion = txaDescripcionInstitucion.getText();
                Object logo = bytesImagen;
                Institucion institucion = new Institucion(strNombre, strDescripcion, logo);
                gestorCursosEInstituciones.guardarInstitucion(institucion, false);
                this.dlgEditarInstitucion.setVisible(false);
                this.gestorCursosEInstituciones.setInstituciones(this.gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));
                llenarListaInstituciones(this.gestorCursosEInstituciones.getInstituciones());
                bytesImagen = null;
            }
        } else {
            gestorEstadosDialogInstituciones.setNuevoEstadoImportante("No se han completado todos los campos.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }
    }//GEN-LAST:event_btnGuardarInstitucionActionPerformed

    private void btnVolverInstitucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInstitucionMouseEntered
        this.gestorEstadosDialogInstituciones.setEstadoInstantaneo("Volver al gestor de cursos e instituciones.");
    }//GEN-LAST:event_btnVolverInstitucionMouseEntered

    private void btnVolverInstitucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInstitucionMouseExited
        this.gestorEstadosDialogInstituciones.volverAEstadoImportante();
    }//GEN-LAST:event_btnVolverInstitucionMouseExited

    private void btnVolverInstitucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverInstitucionActionPerformed
        this.dlgEditarInstitucion.setVisible(false);
        bytesImagen = null;
    }//GEN-LAST:event_btnVolverInstitucionActionPerformed

    private void btnGuardarCursoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarCursoMouseEntered
        this.gestorEstadosDialogCursos.setEstadoInstantaneo("Guardar curso en la base de datos.");
    }//GEN-LAST:event_btnGuardarCursoMouseEntered

    private void btnGuardarCursoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarCursoMouseExited
        this.gestorEstadosDialogCursos.volverAEstadoImportante();
    }//GEN-LAST:event_btnGuardarCursoMouseExited

    private void btnGuardarCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCursoActionPerformed
        if (validarCamposCursos()) {
            if (lstCursos.getSelectedValue() != null && lstInstituciones.getSelectedValue() != null && this.blnEdicionCurso == true) // Se va editar un curso
            {
                String strNombreCurso = txtNombreCurso.getText();
                String strDescripcion = txaDescripcionCurso.getText();
                int intIdCurso = ((Curso) lstCursos.getSelectedValue()).getIntCursoId();
                Curso curso = new Curso(intIdCurso, strNombreCurso, strDescripcion, (Institucion) lstInstituciones.getSelectedValue());
                gestorCursosEInstituciones.guardadCurso(curso, (Institucion) lstInstituciones.getSelectedValue(), true);
                gestorEstados.setNuevoEstadoImportante("Se ha modificado correctamente el curso.", GestorBarrasDeEstado.TipoEstado.OK);
                llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), "");
                dlgEditarCurso.setVisible(false);
            } else {
                String strNombreCurso = txtNombreCurso.getText();
                String strDescripcionCurso = txaDescripcionCurso.getText();
                int institucionId = ((Institucion) lstInstituciones.getSelectedValue()).getIntInstitucionId();
                String strNombreInstitucion = ((Institucion) lstInstituciones.getSelectedValue()).getStrNombre();
                String strDescripcionInstitucion = ((Institucion) lstInstituciones.getSelectedValue()).getStrDescripcion();
                Institucion institucion = new Institucion(institucionId, strNombreInstitucion, strDescripcionInstitucion);
                Curso curso = new Curso(strNombreCurso, strDescripcionCurso, institucion);
                gestorCursosEInstituciones.guardadCurso(curso, institucion, blnEdicionCurso);
                llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), "");
                dlgEditarCurso.setVisible(false);
            }
        } else {
            gestorEstadosDialogCursos.setNuevoEstadoImportante("No se han completado todos los campos.", GestorBarrasDeEstado.TipoEstado.ADVERTENCIA);
        }

    }//GEN-LAST:event_btnGuardarCursoActionPerformed

    private void btnVolverCursoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverCursoMouseEntered
        this.gestorEstadosDialogCursos.setEstadoInstantaneo("Volver al gestor de cursos e instituciones.");
    }//GEN-LAST:event_btnVolverCursoMouseEntered

    private void btnVolverCursoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverCursoMouseExited
        this.gestorEstadosDialogCursos.volverAEstadoImportante();
    }//GEN-LAST:event_btnVolverCursoMouseExited

    private void btnVolverCursoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverCursoActionPerformed
        this.dlgEditarCurso.setVisible(false);
    }//GEN-LAST:event_btnVolverCursoActionPerformed

    private void lstInstitucionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstInstitucionesMouseClicked
        if (evt.getClickCount() > 1 && lstInstituciones.getSelectedIndex() != -1) {
            this.limpiarCamposDialogInstituciones();
            this.dlgEditarInstitucion.setSize(this.dlgEditarInstitucion.getPreferredSize());
            this.dlgEditarInstitucion.setLocationRelativeTo(mPadre);
            this.dlgEditarInstitucion.setTitle("Editar institución");
            pasarDatosDeInstitucionesAlJdialog();
            this.blnEdicion = true;
            if ((byte[]) ((Institucion) lstInstituciones.getSelectedValue()).getImgLogo() != null) {
                this.bytesImagen = (byte[]) ((Institucion) lstInstituciones.getSelectedValue()).getImgLogo();
                Image img = Toolkit.getDefaultToolkit().createImage(bytesImagen);
                this.pnlImagenLogo.setImagen(img);
                this.lblLogo.setVisible(false);
            }
            this.gestorEstadosDialogInstituciones.setNuevoEstadoImportante("");
            this.dlgEditarInstitucion.setVisible(true);

        }
    }//GEN-LAST:event_lstInstitucionesMouseClicked

    private void lstCursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstCursosMouseClicked
        if (evt.getClickCount() > 1 && lstCursos.getSelectedValue() != null) {
            this.limpiarCamposDialogCursos();
            this.dlgEditarCurso.setSize(this.dlgEditarCurso.getPreferredSize());
            this.dlgEditarCurso.setLocationRelativeTo(mPadre);
            this.dlgEditarCurso.setTitle("Editar curso");
            this.blnEdicionCurso = true;
            pasarDatosDeCursosAlJdialog();
            this.dlgEditarCurso.setVisible(true);
        }
    }//GEN-LAST:event_lstCursosMouseClicked

    private void btnImprimirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Ver las estadísticas del curso seleccionado.");
    }//GEN-LAST:event_btnImprimirMouseEntered

    private void btnImprimirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnImprimirMouseExited

    private void btnVolverInicioMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInicioMouseEntered
        this.gestorEstados.setEstadoInstantaneo("Volver a la pantalla inicial.");
    }//GEN-LAST:event_btnVolverInicioMouseEntered

    private void btnVolverInicioMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVolverInicioMouseExited
        this.gestorEstados.volverAEstadoImportante();
    }//GEN-LAST:event_btnVolverInicioMouseExited

    private void btnVolverInicioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolverInicioActionPerformed
        mPadre.getPanelDeslizante().setPanelMostrado(mPadre.getPnlInicio());
        mPadre.setTitle("Sistema de Administración de Entornos Educativos");
    }//GEN-LAST:event_btnVolverInicioActionPerformed

    private void btnCargarLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarLogoActionPerformed
        JFileChooser flcChooser = new JFileChooser();
        flcChooser.setFileFilter(new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes()));
        flcChooser.setDialogTitle("Cargar imagen");
        flcChooser.setDialogType(JFileChooser.OPEN_DIALOG);
        flcChooser.setMultiSelectionEnabled(false);
        flcChooser.setAcceptAllFileFilterUsed(false);
        int intEstado = flcChooser.showOpenDialog(this);
        if (intEstado == JFileChooser.APPROVE_OPTION) {
            File archivoElegido = flcChooser.getSelectedFile();
            String strRutaAbsoluta = archivoElegido.getPath();
            if (archivoElegido.exists()) {
                BufferedImage imgSeleccionada = GestorImagenes.redimensionarImagen(strRutaAbsoluta, 155, 155);
                this.pnlImagenLogo.setImagen(imgSeleccionada);
                this.lblLogo.setVisible(false);
                bytesImagen = guardarParametrosDeImagen(strRutaAbsoluta);
            }
        }
    }//GEN-LAST:event_btnCargarLogoActionPerformed

    private void btnBorrarLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBorrarLogoActionPerformed
        this.lblLogo.setVisible(true);
        this.bytesImagen = null;
    }//GEN-LAST:event_btnBorrarLogoActionPerformed

    private void lstInstitucionesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstInstitucionesValueChanged
        if (lstInstituciones.getSelectedValue() != null) {
            llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), "");
        }

    }//GEN-LAST:event_lstInstitucionesValueChanged

    private void txtFiltroInstitucionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroInstitucionKeyReleased
        if (evt.getSource() == txtFiltroInstitucion) {
            if (txtFiltroInstitucion.getText().equals("")) {
                llenarListaInstituciones(gestorCursosEInstituciones.recuperarTodasLasInstituciones(""));
            } else {
                llenarListaInstituciones(gestorCursosEInstituciones.recuperarTodasLasInstituciones(txtFiltroInstitucion.getText()));
            }
            DefaultListModel modelo = new DefaultListModel();
            lstCursos.setModel(modelo);
        }
    }//GEN-LAST:event_txtFiltroInstitucionKeyReleased

    private void txtFiltroCursoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroCursoKeyReleased
        if (evt.getSource() == txtFiltroCurso) {
            if (txtFiltroCurso.getText().equals("")) {
                llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), "");
            } else {
                llenarCursosPorInstitucion((Institucion) lstInstituciones.getSelectedValue(), txtFiltroCurso.getText());
            }

        }
    }//GEN-LAST:event_txtFiltroCursoKeyReleased

    private void dlgEditarInstitucionWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dlgEditarInstitucionWindowClosed
        bytesImagen = null;        // TODO add your handling code here:
    }//GEN-LAST:event_dlgEditarInstitucionWindowClosed

    private void dlgEditarInstitucionWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_dlgEditarInstitucionWindowClosing
        bytesImagen = null;
    }//GEN-LAST:event_dlgEditarInstitucionWindowClosing

    private void btnImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImprimirActionPerformed
        Institucion institucion = (Institucion) lstInstituciones.getSelectedValue();
        Curso curso = (Curso) lstCursos.getSelectedValue();
        if (institucion == null && curso == null) {
            Mensajes.mostrarInformacion("Debe seleccionar primero una institución o curso.");
            return;
        }
        if (curso != null) {
            GestorExamen.getInstancia().verEstadisticas(this, curso);
        } else {
            GestorExamen.getInstancia().verEstadisticas(this, institucion);
        }
    }//GEN-LAST:event_btnImprimirActionPerformed

    public GestorBarrasDeEstado getGestorEstados() {
        return gestorEstados;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBorrarLogo;
    private javax.swing.JButton btnCargarLogo;
    private javax.swing.JButton btnEliminarCurso;
    private javax.swing.JButton btnEliminarInstitucion;
    private javax.swing.JButton btnGuardarCurso;
    private javax.swing.JButton btnGuardarInstitucion;
    private javax.swing.JButton btnImprimir;
    private javax.swing.JButton btnNuevaInstitucion;
    private javax.swing.JButton btnNuevoCurso;
    private javax.swing.JButton btnVolverCurso;
    private javax.swing.JButton btnVolverInicio;
    private javax.swing.JButton btnVolverInstitucion;
    private javax.swing.JDialog dlgEditarCurso;
    private javax.swing.JDialog dlgEditarInstitucion;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblActualizacionEstado;
    private javax.swing.JLabel lblDescripcionCurso;
    private javax.swing.JLabel lblDescripcionInstitucion;
    private javax.swing.JLabel lblEstadoCurso;
    private javax.swing.JLabel lblEstadoInstitucion;
    private javax.swing.JLabel lblIconoEstado;
    private javax.swing.JLabel lblIconoEstadoCurso;
    private javax.swing.JLabel lblIconoEstadoInstitucion;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblNombreCurso;
    private javax.swing.JLabel lblNombreInstitucion;
    private javax.swing.JLabel lblSeparador;
    private javax.swing.JList lstCursos;
    private javax.swing.JList lstInstituciones;
    private javax.swing.JPanel pnlBotones;
    private javax.swing.JPanel pnlBotonesCurso;
    private javax.swing.JPanel pnlBotonesInstitucion;
    private javax.swing.JPanel pnlCentral;
    private javax.swing.JPanel pnlCursos;
    private javax.swing.JPanel pnlDatosCurso;
    private javax.swing.JPanel pnlDatosInstitucion;
    private javax.swing.JPanel pnlEstado;
    private javax.swing.JPanel pnlEstadoCurso;
    private javax.swing.JPanel pnlEstadoInstitucion;
    private frontend.auxiliares.PanelConFondo pnlImagenLogo;
    private javax.swing.JPanel pnlInstituciones;
    private javax.swing.JPanel pnlLogo;
    private javax.swing.JScrollPane scrCursos;
    private javax.swing.JScrollPane scrDescripcionInstitucion;
    private javax.swing.JScrollPane scrInstituciones;
    private frontend.auxiliares.TextAreaEntropy txaDescripcionCurso;
    private frontend.auxiliares.TextAreaEntropy txaDescripcionInstitucion;
    private frontend.auxiliares.TextFieldEntropy txtFiltroCurso;
    private frontend.auxiliares.TextFieldEntropy txtFiltroInstitucion;
    private frontend.auxiliares.TextFieldEntropy txtNombreCurso;
    private frontend.auxiliares.TextFieldEntropy txtNombreInstitucion;
    // End of variables declaration//GEN-END:variables

    /**
     * Limpia los campos del dialog instituciones para cargarlos nuevamente.
     */
    private void limpiarCamposDialogInstituciones() {
        this.txtNombreInstitucion.setText("");
        this.txaDescripcionInstitucion.setText("");
        this.lblLogo.setVisible(true);
        this.gestorEstadosDialogInstituciones.setNuevoEstadoImportante("");
    }

    /**
     * Limpia los campos del dialog cursos para cargarlos nuevamente.
     */
    private void limpiarCamposDialogCursos() {
        this.txtNombreCurso.setText("");
        this.txaDescripcionCurso.setText("");
        this.gestorEstadosDialogCursos.setNuevoEstadoImportante("");

    }

    // Metodo para cargar a la lista las instituciones
    private void llenarListaInstituciones(ArrayList<Institucion> instituciones) {
        DefaultListModel listModel = new DefaultListModel();
        lstInstituciones.setModel(listModel);
        for (int i = 0; i < instituciones.size(); i++) {
            listModel.add(i, instituciones.get(i));
        }
        lstInstituciones.setModel(listModel);
    }

    //Metodo para cargar los cursos por instituciones seleccionadas, sirve para filtrar si el campo strNombre tiene un valor
    private void llenarCursosPorInstitucion(Institucion institucion, String strNombre) {
        DefaultListModel listModel = new DefaultListModel();
        DAOCurso daoCurso = new DAOCurso();
        ArrayList<Curso> cursos = new ArrayList<>();
        cursos = daoCurso.recuperarTodosLosCursos(institucion, strNombre);
        for (int i = 0; i < cursos.size(); i++) {
            listModel.add(i, cursos.get(i));
        }
        lstCursos.setModel(listModel);
    }

    private boolean validarCamposInstitucion() {
        if (!txtNombreInstitucion.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    private boolean validarCamposCursos() {
        if (!txtNombreCurso.getText().equals("")) {
            return true;
        } else {
            return false;
        }
    }

    private void pasarDatosDeInstitucionesAlJdialog() {
        if (lstInstituciones.getSelectedValue() != null) {
            txtNombreInstitucion.setText(((Institucion) lstInstituciones.getSelectedValue()).getStrNombre());
            if (((Institucion) lstInstituciones.getSelectedValue()).getStrDescripcion() != null) {
                txaDescripcionInstitucion.setText(((Institucion) lstInstituciones.getSelectedValue()).getStrDescripcion());
            }
        }
    }

    private void pasarDatosDeCursosAlJdialog() {
        if (lstInstituciones.getSelectedValue() != null && lstCursos.getSelectedValue() != null) {
            txtNombreCurso.setText(((Curso) lstCursos.getSelectedValue()).getStrNombre());
            txaDescripcionCurso.setText(((Curso) lstCursos.getSelectedValue()).getStrDescripcion());
        }
    }

    private byte[] guardarParametrosDeImagen(String ruta) {
        File fila = new File(ruta);
        byte[] bytes = null;
        FileInputStream entrada;
        try {
            entrada = new FileInputStream(fila);
            bytes = new byte[(int) fila.length()];
            entrada.read(bytes);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(PanelAdministrarCursos.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(PanelAdministrarCursos.class.getName()).log(Level.SEVERE, null, ex);
        }
        return bytes;
    }

}
