package frontend.resoluciones;

import backend.auxiliares.Mensajes;
import backend.gestores.GestorExamen;
import backend.reporte.*;
import backend.usuarios.Alumno;
import backend.resoluciones.Resolucion;
import frontend.auxiliares.GestorBarrasDeEstado;
import frontend.auxiliares.LookAndFeelEntropy;
import frontend.mail.EnvioMail;
import java.awt.Desktop;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.ListModel;

/**
 *
 * @author Denise
 */
public class PanelResoluciones extends javax.swing.JPanel {

    private final ArrayList<Resolucion> colResoluciones;
    private final DefaultListModel defaultLstPreguntas;
    private final GestorBarrasDeEstado gestorEstado;

    /**
     * Creates new form PanelResoluciones
     *
     * @param colResoluciones
     */
    public PanelResoluciones(ArrayList<Resolucion> colResoluciones) {
        initComponents();
        this.gestorEstado = new GestorBarrasDeEstado(lblActualizacionEstado, lblIconoEstado);
        this.colResoluciones = colResoluciones;
        this.defaultLstPreguntas = new DefaultListModel();
        this.lstResoluciones.setModel(defaultLstPreguntas);
        for (Resolucion resolucion : colResoluciones) {
            defaultLstPreguntas.addElement(resolucion);
        }
        this.lstResoluciones.setSelectedIndex(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlContenido = new javax.swing.JPanel();
        pnlPreguntas = new javax.swing.JPanel();
        scrPreguntas = new javax.swing.JScrollPane();
        lstResoluciones = new javax.swing.JList();
        btnVerRespuestas = new javax.swing.JButton();
        btnVerEstadisticasDelAlumno = new javax.swing.JButton();
        btnCompartirResolucion = new javax.swing.JButton();
        btnCorregirTodas = new javax.swing.JButton();
        btnVerResolucion = new javax.swing.JButton();
        pnlPreguntaSeleccionada = new javax.swing.JPanel();
        pnlDatosAlumno = new javax.swing.JPanel();
        lblsNombre = new javax.swing.JLabel();
        lblsLegajo = new javax.swing.JLabel();
        lblLegajo = new javax.swing.JLabel();
        lblNombre = new javax.swing.JLabel();
        pnlDatosGenerales = new javax.swing.JPanel();
        lblsDuracion = new javax.swing.JLabel();
        lblDuracion = new javax.swing.JLabel();
        lblsPreguntasRespondidas = new javax.swing.JLabel();
        lblPreguntasRespondidas = new javax.swing.JLabel();
        lblsPreguntasCorregidas = new javax.swing.JLabel();
        lblPreguntasCorregidas = new javax.swing.JLabel();
        lblsEstado = new javax.swing.JLabel();
        lblEstado = new javax.swing.JLabel();
        lblsCalificacion = new javax.swing.JLabel();
        lblCalificacion = new javax.swing.JLabel();
        lblsPorcentaje = new javax.swing.JLabel();
        lblPorcentaje = new javax.swing.JLabel();
        pnlEstado = new javax.swing.JPanel();
        lblActualizacionEstado = new javax.swing.JLabel();
        lblIconoEstado = new javax.swing.JLabel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        pnlContenido.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(204, 102, 0))); // NOI18N

        pnlPreguntas.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resoluciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pnlPreguntas.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        pnlPreguntas.setMaximumSize(new java.awt.Dimension(600, 32767));

        scrPreguntas.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 51, 0)));
        scrPreguntas.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        lstResoluciones.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        lstResoluciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstResoluciones.setCellRenderer(new CeldaListaResoluciones());
        lstResoluciones.setSelectionBackground(new java.awt.Color(255, 204, 102));
        lstResoluciones.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstResolucionesValueChanged(evt);
            }
        });
        scrPreguntas.setViewportView(lstResoluciones);

        btnVerRespuestas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_corregir_25x25.png"))); // NOI18N
        btnVerRespuestas.setToolTipText("");
        btnVerRespuestas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVerRespuestas.setContentAreaFilled(false);
        btnVerRespuestas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerRespuestas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerRespuestasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerRespuestasMouseExited(evt);
            }
        });
        btnVerRespuestas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerRespuestasActionPerformed(evt);
            }
        });

        btnVerEstadisticasDelAlumno.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_estadisticas_alumno_25x25.png"))); // NOI18N
        btnVerEstadisticasDelAlumno.setToolTipText("");
        btnVerEstadisticasDelAlumno.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVerEstadisticasDelAlumno.setContentAreaFilled(false);
        btnVerEstadisticasDelAlumno.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerEstadisticasDelAlumno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerEstadisticasDelAlumnoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerEstadisticasDelAlumnoMouseExited(evt);
            }
        });
        btnVerEstadisticasDelAlumno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerEstadisticasDelAlumnoActionPerformed(evt);
            }
        });

        btnCompartirResolucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_compartir_25x25.png"))); // NOI18N
        btnCompartirResolucion.setToolTipText("");
        btnCompartirResolucion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCompartirResolucion.setContentAreaFilled(false);
        btnCompartirResolucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCompartirResolucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCompartirResolucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCompartirResolucionMouseExited(evt);
            }
        });
        btnCompartirResolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCompartirResolucionActionPerformed(evt);
            }
        });

        btnCorregirTodas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_mano_25x25.png"))); // NOI18N
        btnCorregirTodas.setToolTipText("");
        btnCorregirTodas.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnCorregirTodas.setContentAreaFilled(false);
        btnCorregirTodas.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCorregirTodas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCorregirTodasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCorregirTodasMouseExited(evt);
            }
        });
        btnCorregirTodas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCorregirTodasActionPerformed(evt);
            }
        });

        btnVerResolucion.setIcon(new javax.swing.ImageIcon(getClass().getResource("/frontend/imagenes/ic_examinar_25x25.png"))); // NOI18N
        btnVerResolucion.setToolTipText("");
        btnVerResolucion.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnVerResolucion.setContentAreaFilled(false);
        btnVerResolucion.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnVerResolucion.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVerResolucionMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVerResolucionMouseExited(evt);
            }
        });
        btnVerResolucion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerResolucionActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPreguntasLayout = new javax.swing.GroupLayout(pnlPreguntas);
        pnlPreguntas.setLayout(pnlPreguntasLayout);
        pnlPreguntasLayout.setHorizontalGroup(
            pnlPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrPreguntas, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
            .addGroup(pnlPreguntasLayout.createSequentialGroup()
                .addComponent(btnCorregirTodas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVerResolucion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerRespuestas)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnVerEstadisticasDelAlumno)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCompartirResolucion))
        );
        pnlPreguntasLayout.setVerticalGroup(
            pnlPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreguntasLayout.createSequentialGroup()
                .addComponent(scrPreguntas, javax.swing.GroupLayout.DEFAULT_SIZE, 292, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlPreguntasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnVerRespuestas)
                    .addComponent(btnVerEstadisticasDelAlumno)
                    .addComponent(btnCompartirResolucion)
                    .addComponent(btnCorregirTodas)
                    .addComponent(btnVerResolucion)))
        );

        pnlPreguntaSeleccionada.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Resolución Seleccionada", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(102, 102, 102))); // NOI18N
        pnlPreguntaSeleccionada.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N

        pnlDatosAlumno.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Alumno", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, LookAndFeelEntropy.FUENTE_REGULAR, new java.awt.Color(102, 102, 102)));

        lblsNombre.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsNombre.setText("Nombre:");

        lblsLegajo.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsLegajo.setText("Legajo:");

        lblLegajo.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblLegajo.setText("55192");

        lblNombre.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblNombre.setText("Nombre completo");

        javax.swing.GroupLayout pnlDatosAlumnoLayout = new javax.swing.GroupLayout(pnlDatosAlumno);
        pnlDatosAlumno.setLayout(pnlDatosAlumnoLayout);
        pnlDatosAlumnoLayout.setHorizontalGroup(
            pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosAlumnoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblsNombre, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblsLegajo, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblLegajo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDatosAlumnoLayout.setVerticalGroup(
            pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosAlumnoLayout.createSequentialGroup()
                .addGroup(pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsNombre)
                    .addComponent(lblNombre))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosAlumnoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsLegajo)
                    .addComponent(lblLegajo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDatosGenerales.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos Generales", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, LookAndFeelEntropy.FUENTE_REGULAR, new java.awt.Color(102, 102, 102)));

        lblsDuracion.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsDuracion.setText("Duración:");

        lblDuracion.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblDuracion.setText("1:32 h");

        lblsPreguntasRespondidas.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsPreguntasRespondidas.setText("Preguntas respondidas:");

        lblPreguntasRespondidas.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblPreguntasRespondidas.setText("20/30");

        lblsPreguntasCorregidas.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsPreguntasCorregidas.setText("Preguntas corregidas:");

        lblPreguntasCorregidas.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblPreguntasCorregidas.setText("29/30");

        lblsEstado.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsEstado.setText("Estado:");

        lblEstado.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblEstado.setText("Correción incompleta.");

        lblsCalificacion.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsCalificacion.setText("Calificación:");

        lblCalificacion.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblCalificacion.setText("95/100");

        lblsPorcentaje.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblsPorcentaje.setText("Porcentaje aprobado:");

        lblPorcentaje.setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        lblPorcentaje.setText("95 %");

        javax.swing.GroupLayout pnlDatosGeneralesLayout = new javax.swing.GroupLayout(pnlDatosGenerales);
        pnlDatosGenerales.setLayout(pnlDatosGeneralesLayout);
        pnlDatosGeneralesLayout.setHorizontalGroup(
            pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsDuracion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblDuracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsPreguntasRespondidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPreguntasRespondidas, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE))
                    .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsPreguntasCorregidas)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPreguntasCorregidas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsEstado)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblEstado, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsCalificacion)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblCalificacion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDatosGeneralesLayout.createSequentialGroup()
                        .addComponent(lblsPorcentaje)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblPorcentaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        pnlDatosGeneralesLayout.setVerticalGroup(
            pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDatosGeneralesLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsEstado)
                    .addComponent(lblEstado))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsDuracion)
                    .addComponent(lblDuracion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsCalificacion)
                    .addComponent(lblCalificacion))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblsPorcentaje)
                    .addComponent(lblPorcentaje))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreguntasRespondidas)
                    .addComponent(lblsPreguntasRespondidas, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlDatosGeneralesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPreguntasCorregidas)
                    .addComponent(lblsPreguntasCorregidas))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlPreguntaSeleccionadaLayout = new javax.swing.GroupLayout(pnlPreguntaSeleccionada);
        pnlPreguntaSeleccionada.setLayout(pnlPreguntaSeleccionadaLayout);
        pnlPreguntaSeleccionadaLayout.setHorizontalGroup(
            pnlPreguntaSeleccionadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlDatosAlumno, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPreguntaSeleccionadaLayout.createSequentialGroup()
                .addComponent(pnlDatosGenerales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlPreguntaSeleccionadaLayout.setVerticalGroup(
            pnlPreguntaSeleccionadaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPreguntaSeleccionadaLayout.createSequentialGroup()
                .addComponent(pnlDatosAlumno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlDatosGenerales, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout pnlContenidoLayout = new javax.swing.GroupLayout(pnlContenido);
        pnlContenido.setLayout(pnlContenidoLayout);
        pnlContenidoLayout.setHorizontalGroup(
            pnlContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlContenidoLayout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addComponent(pnlPreguntas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPreguntaSeleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlContenidoLayout.setVerticalGroup(
            pnlContenidoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlPreguntaSeleccionada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlPreguntas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        add(pnlContenido);

        pnlEstado.setBorder(javax.swing.BorderFactory.createEtchedBorder(null, java.awt.Color.lightGray));
        pnlEstado.setMaximumSize(new java.awt.Dimension(32767, 32));
        pnlEstado.setMinimumSize(new java.awt.Dimension(0, 32));
        pnlEstado.setPreferredSize(new java.awt.Dimension(798, 32));

        lblActualizacionEstado.setFont(new java.awt.Font("Calibri", 2, 12)); // NOI18N
        lblActualizacionEstado.setForeground(new java.awt.Color(102, 102, 102));
        lblActualizacionEstado.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblActualizacionEstado.setText("Acá se escriben estados...");
        lblActualizacionEstado.setAlignmentX(0.5F);
        lblActualizacionEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        lblIconoEstado.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblIconoEstado.setText(" ");
        lblIconoEstado.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        javax.swing.GroupLayout pnlEstadoLayout = new javax.swing.GroupLayout(pnlEstado);
        pnlEstado.setLayout(pnlEstadoLayout);
        pnlEstadoLayout.setHorizontalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlEstadoLayout.createSequentialGroup()
                .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.DEFAULT_SIZE, 546, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        pnlEstadoLayout.setVerticalGroup(
            pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlEstadoLayout.createSequentialGroup()
                .addGap(0, 1, Short.MAX_VALUE)
                .addGroup(pnlEstadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblActualizacionEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIconoEstado, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        add(pnlEstado);
    }// </editor-fold>//GEN-END:initComponents

    private void lstResolucionesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstResolucionesValueChanged
        cargarDatosGenerales((Resolucion) lstResoluciones.getSelectedValue());
    }//GEN-LAST:event_lstResolucionesValueChanged

    private void btnVerRespuestasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerRespuestasActionPerformed
        mostrarRespuestas();
    }//GEN-LAST:event_btnVerRespuestasActionPerformed

    private void btnVerRespuestasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerRespuestasMouseExited
        gestorEstado.volverAEstadoImportante();
    }//GEN-LAST:event_btnVerRespuestasMouseExited

    private void btnVerRespuestasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerRespuestasMouseEntered
        gestorEstado.setEstadoInstantaneo("Ver y corregir las respuestas del alumno.");
    }//GEN-LAST:event_btnVerRespuestasMouseEntered

    private void btnVerEstadisticasDelAlumnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerEstadisticasDelAlumnoActionPerformed

    }//GEN-LAST:event_btnVerEstadisticasDelAlumnoActionPerformed

    private void btnVerEstadisticasDelAlumnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEstadisticasDelAlumnoMouseExited
        gestorEstado.volverAEstadoImportante();
    }//GEN-LAST:event_btnVerEstadisticasDelAlumnoMouseExited

    private void btnVerEstadisticasDelAlumnoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerEstadisticasDelAlumnoMouseEntered
        gestorEstado.setEstadoInstantaneo("Ver estadísticas de exámenes del alumno.");
    }//GEN-LAST:event_btnVerEstadisticasDelAlumnoMouseEntered

    private void btnCompartirResolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCompartirResolucionActionPerformed
        //Se le envia a una resolucion al alumno seleccionado
        if(lstResoluciones.getSelectedValue()!=null) {
            try {
                Resolucion  resolucion  = (Resolucion)lstResoluciones.getSelectedValue();
                Alumno alumno = resolucion.getAlumno();
                GestorGenerarReporteResolucion gestorReporte = new GestorGenerarReporteResolucion(resolucion);
                gestorReporte.generarReporteResolucion();
                String pathArchivo= gestorReporte.getResolucion();
                Path path = Paths.get(pathArchivo);
                byte[] pdf = Files.readAllBytes(path);
                EnvioMail nuevoMail = new EnvioMail(alumno, pdf);
                nuevoMail.setVisible(true);
            }
            catch(Exception e) {
                System.err.println("Ocurrió una excepción creando el PDF:  "+e.toString());
            }
        }
        else //Si no se seleccionada a quien enviar se le enviara  todas las resoluciones
        {
           if( Mensajes.mostrarConfirmacion("¿Está seguro que desea enviar las resoluciones a todos los alumnos?"))
           {
                ArrayList alumnos = recuperarTodoslosAlumnos(this.lstResoluciones);
                ArrayList<byte[]> pdfs = null; // Son el array de los pdfs que se crearan
                EnvioMail nuevoMail = new EnvioMail(alumnos, pdfs);
           }
           
        }


    }//GEN-LAST:event_btnCompartirResolucionActionPerformed

        
    private void btnCompartirResolucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompartirResolucionMouseExited
        gestorEstado.volverAEstadoImportante();
    }//GEN-LAST:event_btnCompartirResolucionMouseExited

    private void btnCompartirResolucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCompartirResolucionMouseEntered
        gestorEstado.setEstadoInstantaneo("Compartir esta resolución por correo electrónico.");
    }//GEN-LAST:event_btnCompartirResolucionMouseEntered

    private void btnCorregirTodasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCorregirTodasMouseEntered
        gestorEstado.setEstadoInstantaneo("Corregir todas las preguntas aún sin calificación de este examen.");
    }//GEN-LAST:event_btnCorregirTodasMouseEntered

    private void btnCorregirTodasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCorregirTodasMouseExited
        gestorEstado.volverAEstadoImportante();
    }//GEN-LAST:event_btnCorregirTodasMouseExited

    private void btnCorregirTodasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCorregirTodasActionPerformed
        GestorExamen.getInstancia().calificarRespuestasSinCalificacion(this, colResoluciones.get(0).getExamen());
    }//GEN-LAST:event_btnCorregirTodasActionPerformed

    private void btnVerResolucionMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerResolucionMouseEntered
        gestorEstado.setEstadoInstantaneo("Ver examen hecho por alumno.");
    }//GEN-LAST:event_btnVerResolucionMouseEntered

    private void btnVerResolucionMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVerResolucionMouseExited
        gestorEstado.volverAEstadoImportante();
    }//GEN-LAST:event_btnVerResolucionMouseExited

    private void btnVerResolucionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerResolucionActionPerformed
        if(lstResoluciones.getSelectedValue()!=null) {
            try {
                Resolucion  resolucion  = (Resolucion)lstResoluciones.getSelectedValue();
                Alumno alumno = resolucion.getAlumno();
                GestorGenerarReporteResolucion gestorReporte = new GestorGenerarReporteResolucion(resolucion);
                gestorReporte.generarReporteResolucion();
                String pathArchivo= gestorReporte.getResolucion();
                Path path = Paths.get(pathArchivo);
                byte[] pdf = Files.readAllBytes(path);
                File pdfArchivo = new File(pathArchivo);
                Desktop.getDesktop().open(pdfArchivo);
            }
            catch(Exception e) {
                System.err.println("Ocurrió una excepción creando el PDF:  "+e.toString());
            }
        }
    }//GEN-LAST:event_btnVerResolucionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCompartirResolucion;
    private javax.swing.JButton btnCorregirTodas;
    private javax.swing.JButton btnVerEstadisticasDelAlumno;
    private javax.swing.JButton btnVerResolucion;
    private javax.swing.JButton btnVerRespuestas;
    private javax.swing.JLabel lblActualizacionEstado;
    private javax.swing.JLabel lblCalificacion;
    private javax.swing.JLabel lblDuracion;
    private javax.swing.JLabel lblEstado;
    private javax.swing.JLabel lblIconoEstado;
    private javax.swing.JLabel lblLegajo;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPorcentaje;
    private javax.swing.JLabel lblPreguntasCorregidas;
    private javax.swing.JLabel lblPreguntasRespondidas;
    private javax.swing.JLabel lblsCalificacion;
    private javax.swing.JLabel lblsDuracion;
    private javax.swing.JLabel lblsEstado;
    private javax.swing.JLabel lblsLegajo;
    private javax.swing.JLabel lblsNombre;
    private javax.swing.JLabel lblsPorcentaje;
    private javax.swing.JLabel lblsPreguntasCorregidas;
    private javax.swing.JLabel lblsPreguntasRespondidas;
    private javax.swing.JList lstResoluciones;
    private javax.swing.JPanel pnlContenido;
    private javax.swing.JPanel pnlDatosAlumno;
    private javax.swing.JPanel pnlDatosGenerales;
    private javax.swing.JPanel pnlEstado;
    private javax.swing.JPanel pnlPreguntaSeleccionada;
    private javax.swing.JPanel pnlPreguntas;
    private javax.swing.JScrollPane scrPreguntas;
    // End of variables declaration//GEN-END:variables

    private void cargarDatosGenerales(Resolucion resolucion) {
        lblNombre.setText(resolucion.getAlumno().getStrNombre());
        lblLegajo.setText((resolucion.getAlumno().getStrLegajo() == null) ? "" : resolucion.getAlumno().getStrLegajo());
        lblEstado.setText((resolucion.esCorreccionCompleta()) ? "Corrección completa." : "Corrección incompleta.");
        lblDuracion.setText((int) (resolucion.getIntTiempoEmpleado() / 60) + ":" + resolucion.getIntTiempoEmpleado() % 60 + " h");
        double dblCalificacion = resolucion.getCalificacion();
        double dblPuntajeTotal = resolucion.getExamen().getPuntajeTotal();
        lblCalificacion.setText(dblCalificacion + "/" + dblPuntajeTotal);
        lblPorcentaje.setText(String.format("%.2f", (100 * dblCalificacion / dblPuntajeTotal)) + " %");
        lblPreguntasRespondidas.setText(resolucion.getCantidadPreguntasRespondidas() + "/" + resolucion.getColRespuestas().size());
        lblPreguntasCorregidas.setText(resolucion.getCantidadPreguntasCorregidas() + "/" + resolucion.getColRespuestas().size());
    }

    private void mostrarRespuestas() {
        if (lstResoluciones.getSelectedIndex() == -1) {
            return;
        }
        Resolucion resolucion = (Resolucion) lstResoluciones.getSelectedValue();
        GestorExamen.getInstancia().verRespuestas(this, resolucion);
    }
    
    
    private ArrayList<Alumno> recuperarTodoslosAlumnos(JList lista)
    {
        ListModel listaModelo = lista.getModel();
        ArrayList listaAlumnos = new ArrayList();
        for (int i = 0; i < listaModelo.getSize(); i++) {
            listaAlumnos.add(((Resolucion)listaModelo.getElementAt(i)).getAlumno());
        }
        return listaAlumnos;
    }
}
