package frontend.diseños;

import backend.auxiliares.Mensajes;
import backend.diseños.OpcionMultipleOpcion;
import frontend.auxiliares.CeldaBooleanaRendererEntropy;
import frontend.auxiliares.CeldaBotonRendererEntropy;
import frontend.auxiliares.CeldaMultiLineaRendererEntropy;
import frontend.auxiliares.GestorImagenes;
import frontend.auxiliares.LookAndFeelEntropy;
import java.awt.event.ActionEvent;
import java.util.ArrayList;
import javax.swing.AbstractAction;
import javax.swing.Action;
import javax.swing.JTable;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 * Clase que representa el panel de edición de preguntas con múltiples opciones.
 *
 * @author Denise
 */
public class PanelPreguntaMultiplesOpciones extends javax.swing.JPanel {

    /**
     * Constructor para PanelPreguntaMultiplesOpciones.
     */
    public PanelPreguntaMultiplesOpciones() {
        initComponents();
        tblOpciones.getColumn("Es correcta").setMaxWidth(70);
        tblOpciones.getColumn("Eliminar").setMaxWidth(70);
        tblOpciones.getTableHeader().setFont(LookAndFeelEntropy.FUENTE_REGULAR);
        tblOpciones.setDefaultRenderer(String.class, new CeldaMultiLineaRendererEntropy(tblOpciones, true));
        tblOpciones.setDefaultEditor(String.class, new CeldaMultiLineaRendererEntropy(tblOpciones, true));
        tblOpciones.setDefaultRenderer(Boolean.class, new CeldaBooleanaRendererEntropy());
        Action decrease = new AbstractAction("-") {
            @Override
            public void actionPerformed(ActionEvent e) {
                JTable table = (JTable) e.getSource();
                int fila = Integer.valueOf(e.getActionCommand());
                if (fila != tblOpciones.getRowCount() - 1) {
                    ((DefaultTableModel) table.getModel()).removeRow(fila);
                    tblOpciones.setRowSelectionInterval(fila, fila);
                }
            }
        };
        tblOpciones.getModel().addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
                if (e.getType() != TableModelEvent.UPDATE) {
                    return;
                }
                int fila = e.getLastRow();
                if (fila == tblOpciones.getRowCount() - 1) {
                    String strDescripcionUltima = (tblOpciones.getValueAt(fila, 1) == null) ? "" : tblOpciones.getValueAt(fila, 1).toString();
                    if (!strDescripcionUltima.isEmpty()) {
                        ((DefaultTableModel) tblOpciones.getModel()).addRow(new Object[]{false, "", null});
                    }
                }
                for (int i = 0; i < tblOpciones.getRowCount() - 1; i++) {
                    String strDescripcion = (tblOpciones.getValueAt(i, 1) == null) ? "" : tblOpciones.getValueAt(i, 1).toString();
                    if (strDescripcion.isEmpty()) {
                        ((DefaultTableModel) tblOpciones.getModel()).removeRow(i);
                    }
                }
            }
        });

        CeldaBotonRendererEntropy dec = new CeldaBotonRendererEntropy(
                tblOpciones,
                decrease,
                2,
                GestorImagenes.crearImageIcon("/frontend/imagenes/ic_borrar_cuadrado.png"),
                GestorImagenes.crearImageIcon("/frontend/imagenes/ic_borrar_cuadrado_presionado.png"));

        ((DefaultTableModel) tblOpciones.getModel()).removeRow(0);
        ((DefaultTableModel) tblOpciones.getModel()).addRow(new Object[]{false, "", null});
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrOpciones = new javax.swing.JScrollPane();
        tblOpciones = new javax.swing.JTable();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Opciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Calibri", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        tblOpciones.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tblOpciones.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        tblOpciones.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Es correcta", "Descripción", "Eliminar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblOpciones.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tblOpciones.getTableHeader().setReorderingAllowed(false);
        scrOpciones.setViewportView(tblOpciones);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrOpciones, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 367, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scrOpciones, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public ArrayList<OpcionMultipleOpcion> getOpciones() {
        ArrayList<OpcionMultipleOpcion> colOpciones = new ArrayList<>();
        
        for (int i = 0; i < tblOpciones.getRowCount() - 1; i++) {
            OpcionMultipleOpcion nuevaOpcion = new OpcionMultipleOpcion(
                    i + 1,
                    tblOpciones.getValueAt(i, 1).toString(),
                    (boolean) tblOpciones.getValueAt(i, 0));

            colOpciones.add(nuevaOpcion);
        }

        return colOpciones;
    }

    public void setOpciones(ArrayList<OpcionMultipleOpcion> colOpciones) {
        ((DefaultTableModel) tblOpciones.getModel()).removeRow(0);
        for (OpcionMultipleOpcion opcion : colOpciones) {
            ((DefaultTableModel) tblOpciones.getModel()).addRow(new Object[]{opcion.isBlnEsVerdadera(), opcion.getStrRespuesta()});
        }
        ((DefaultTableModel) tblOpciones.getModel()).addRow(new Object[]{false, "", null});
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane scrOpciones;
    private javax.swing.JTable tblOpciones;
    // End of variables declaration//GEN-END:variables

}
